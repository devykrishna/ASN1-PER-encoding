//
// Generated by JTB 1.3.2
//

options {
   JDK_VERSION = "1.5";
   SANITY_CHECK = true;
   LOOKAHEAD = 8;
   UNICODE_INPUT = true;
   STATIC = false;
}

PARSER_BEGIN(ASN1Parser)
package org.openasn1.parser.generated;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.InputStream;
import org.openasn1.parser.generated.syntaxtree.*;
import org.openasn1.parser.generated.visitor.*;
import java.util.Vector;


public class ASN1Parser 
{
   public static void main(String args[])
   {
      System.out.println("Reading Input File");
      try
      {
         String path;
         if ( args.length < 1 )
         {
            path = "asn1specifications/M3100ASN1TypeModule2.asn";
         }
         else
         {
            path = args[0];
         }
         ASN1Parser p = new ASN1Parser(new FileInputStream(path));
         Node start = p.parse();
         Visitor v = new MyVisitor();
         start.accept(v);
      }
      catch (Exception e)
      {
         System.out.println("Oops.");
         System.out.println(e.getMessage());
      }
   }
   public Node parse() throws ParseException
   {
      return ModuleDefinition();
   }
   public static Node parseFile(File file) throws FileNotFoundException,ParseException
   {
      ASN1Parser p = new ASN1Parser(new FileReader(file));
      return p.parse();
   }
   public static Node parseFile(String file) throws FileNotFoundException,ParseException
   {
      ASN1Parser p = new ASN1Parser(new FileReader(file));
      return p.parse();
   }
   public static Node parseStream(InputStream s) throws ParseException
   {
      ASN1Parser p = new ASN1Parser(s);
      return p.parse();
   }
}
class MyVisitor extends DepthFirstVisitor 
{
   public void visit(NodeToken n)
   {
      System.out.println("visit " + n.tokenImage);
   }
}

class JTBToolkit {
   static NodeToken makeNodeToken(Token t) {
      return new NodeToken(t.image.intern(), t.kind, t.beginLine, t.beginColumn, t.endLine, t.endColumn);
   }
}


PARSER_END(ASN1Parser)

SKIP :
{
   " "
   | "\t"
   | "\n"
   | "\r"
   | <"--" ((~["\n", "\r", "-"])* ("-" (~["\n", "\r", "-"]))*)* ("--" | "-\n" | "-\r" | "-\r\n" | "\n" | "\r" | "\r\n")>
   | <"/*" (~["*"])* "*" (~["/"] (~["*"])* "*")* "/">
}

TOKEN :
{
   <ELLIPSIS_TKN: "...">
}

TOKEN :
{
   <DOTDOT_TKN: "..">
}

TOKEN :
{
   <STAR_TKN: "*">
   | <AMPERSAND_TKN: "&">
   | <ASSIGN_OP_TKN: "::=">
   | <VERSIONBRACKET_START_TKN: "[[">
   | <VERSIONBRACKET_END_TKN: "]]">
   | <XMLENDTAGBRACKET_TKN: "</">
   | <XMLTAGTERMINATINGBRACKET_TKN: "/>">
   | <LEFT_BRACE_TKN: "{">
   | <RIGHT_BRACE_TKN: "}">
   | <LESSER_THAN_TKN: "<">
   | <GREATER_THAN_TKN: ">">
   | <COMMA_TKN: ",">
   | <DOT_TKN: ".">
   | <LEFT_PARENTHESIS_TKN: "(">
   | <RIGHT_PARENTHESIS_TKN: ")">
   | <LEFT_BRACKET_TKN: "[">
   | <RIGHT_BRACKET_TKN: "]">
   | <MINUS_TKN: "-">
   | <COLON_TKN: ":">
   | <EQUAL_TKN: "=">
   | <QUOTATION_TKN: "\"">
   | <APOSTROPHE_TKN: "'">
   | <SEMICOLON_TKN: ";">
   | <AT_TKN: "@">
   | <BAR_TKN: "|">
   | <EXCLAMATION_TKN: "!">
   | <CIRCUMFLEX_TKN: "^">
   | <ABSENT_TKN: "ABSENT">
   | <ABSTRACT_SYNTAX_TKN: "ABSTRACT-SYNTAX">
   | <ALL_TKN: "ALL">
   | <APPLICATION_TKN: "APPLICATION">
   | <AUTOMATIC_TKN: "AUTOMATIC">
   | <BEGIN_TKN: "BEGIN">
   | <BIT_TKN: "BIT">
   | <BMPSTRING_TKN: "BMPString">
   | <BOOLEAN_TKN: "BOOLEAN">
   | <BY_TKN: "BY">
   | <CHARACTER_TKN: "CHARACTER">
   | <CHOICE_TKN: "CHOICE">
   | <CLASS_TKN: "CLASS">
   | <COMPONENT_TKN: "COMPONENT">
   | <COMPONENTS_TKN: "COMPONENTS">
   | <CONSTRAINED_TKN: "CONSTRAINED">
   | <CONTAINING_TKN: "CONTAINING">
   | <DEFAULT_TKN: "DEFAULT">
   | <DEFINITIONS_TKN: "DEFINITIONS">
   | <EMBEDDED_TKN: "EMBEDDED">
   | <ENCODED_TKN: "ENCODED">
   | <END_TKN: "END">
   | <ENUMERATED_TKN: "ENUMERATED">
   | <EXCEPT_TKN: "EXCEPT">
   | <EXPLICIT_TKN: "EXPLICIT">
   | <EXPORTS_TKN: "EXPORTS">
   | <EXTENSIBILITY_TKN: "EXTENSIBILITY">
   | <EXTERNAL_TKN: "EXTERNAL">
   | <FALSE_TKN: "FALSE">
   | <FROM_TKN: "FROM">
   | <GENERALIZEDTIME_TKN: "GeneralizedTime">
   | <GENERALSTRING_TKN: "GeneralString">
   | <GRAPHICSTRING_TKN: "GraphicString">
   | <IA5STRING_TKN: "IA5String">
   | <IDENTIFIER_TKN: "IDENTIFIER">
   | <IMPLICIT_TKN: "IMPLICIT">
   | <IMPLIED_TKN: "IMPLIED">
   | <IMPORTS_TKN: "IMPORTS">
   | <INCLUDES_TKN: "INCLUDES">
   | <INSTANCE_TKN: "INSTANCE">
   | <INTEGER_TKN: "INTEGER">
   | <INTERSECTION_TKN: "INTERSECTION">
   | <ISO646STRING_TKN: "ISO646String">
   | <MAX_TKN: "MAX">
   | <MIN_TKN: "MIN">
   | <MINUS_INFINITY_TKN: "MINUS-INFINITY">
   | <NULL_TKN: "NULL">
   | <NUMERICSTRING_TKN: "NumericString">
   | <OBJECT_TKN: "OBJECT">
   | <OBJECTDESCRIPTOR_TKN: "ObjectDescriptor">
   | <OCTET_TKN: "OCTET">
   | <OF_TKN: "OF">
   | <OPTIONAL_TKN: "OPTIONAL">
   | <PATTERN_TKN: "PATTERN">
   | <PDV_TKN: "PDV">
   | <PLUS_INFINITY_TKN: "PLUS-INFINITY">
   | <PRESENT_TKN: "PRESENT">
   | <PRINTABLESTRING_TKN: "PrintableString">
   | <PRIVATE_TKN: "PRIVATE">
   | <REAL_TKN: "REAL">
   | <RELATIVE_OID_TKN: "RELATIVE-OID">
   | <SEQUENCE_TKN: "SEQUENCE">
   | <SET_TKN: "SET">
   | <SIZE_TKN: "SIZE">
   | <STRING_TKN: "STRING">
   | <SYNTAX_TKN: "SYNTAX">
   | <T61STRING_TKN: "T61String">
   | <TAGS_TKN: "TAGS">
   | <TELETEXSTRING_TKN: "TeletexString">
   | <TRUE_TKN: "TRUE">
   | <TYPE_IDENTIFIER_TKN: "TYPE-IDENTIFIER">
   | <UNION_TKN: "UNION">
   | <UNIQUE_TKN: "UNIQUE">
   | <UNIVERSAL_TKN: "UNIVERSAL">
   | <UNIVERSALSTRING_TKN: "UniversalString">
   | <UTCTIME_TKN: "UTCTime">
   | <UTF8STRING_TKN: "UTF8String">
   | <VIDEOTEXSTRING_TKN: "VideotexString">
   | <VISIBLESTRING_TKN: "VisibleString">
   | <WITH_TKN: "WITH">
}

TOKEN :
{
   <TYPEREFERENCE: ["A"-"Z"] (("-" ["a"-"z", "A"-"Z", "0"-"9"]) | ["a"-"z", "A"-"Z", "0"-"9"])*>
   | <IDENTIFIER: ["a"-"z"] (("-" ["a"-"z", "A"-"Z", "0"-"9"]) | ["a"-"z", "A"-"Z", "0"-"9"])*>
   | <NUMBER: (["0"-"9"])+>
   | <HSTRING: "'" ([" ", "0"-"9", "a"-"f", "A"-"F"])* "'" "H">
   | <BSTRING: "'" (["0", "1", " "])* "'" "B">
   | <CSTRING: "\"" (~["\""])* "\"">
   | <REALNUMBER: (["0"-"9"])+ ("." (["0"-"9"])+)? (["e", "E"] (["+", "-"])? (["0"-"9"])+)?>
}

modulereference modulereference() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<TYPEREFERENCE> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new modulereference(n0); }
}

valuereference valuereference() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new valuereference(n0); }
}

xmlasn1typename xmlasn1typename() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<TYPEREFERENCE> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new xmlasn1typename(n0); }
}

NamedValueList NamedValueList() :
{
   NamedValue n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedValue n5;

   
}
{
   n0=NamedValue()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedValue()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new NamedValueList(n0,n1); }
}

ModuleDefinition ModuleDefinition() :
{
   ModuleIdentifier n0;
   NodeToken n1;
   Token n2;
   NodeOptional n3 = new NodeOptional();
   TagDefault n4;
   NodeOptional n5 = new NodeOptional();
   ExtensionDefault n6;
   NodeToken n7;
   Token n8;
   NodeToken n9;
   Token n10;
   ModuleBody n11;
   NodeToken n12;
   Token n13;

   
}
{
   n0=ModuleIdentifier()
   n2=<DEFINITIONS_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   (
      n4=TagDefault()
      { n3.addNode(n4); }
   )?
   (
      n6=ExtensionDefault()
      { n5.addNode(n6); }
   )?
   n8=<ASSIGN_OP_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
   n10=<BEGIN_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
   n11=ModuleBody()
   n13=<END_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
   
   { return new ModuleDefinition(n0,n1,n3,n5,n7,n9,n11,n12); }
}

ModuleIdentifier ModuleIdentifier() :
{
   modulereference n0;
   NodeOptional n1 = new NodeOptional();
   DefinitiveIdentifier n2;

   
}
{
   n0=modulereference()
   (
      n2=DefinitiveIdentifier()
      { n1.addNode(n2); }
   )?
   
   { return new ModuleIdentifier(n0,n1); }
}

DefinitiveIdentifier DefinitiveIdentifier() :
{
   NodeToken n0;
   Token n1;
   DefinitiveObjIdComponentList n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=DefinitiveObjIdComponentList()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new DefinitiveIdentifier(n0,n2,n3); }
}

DefinitiveObjIdComponentList DefinitiveObjIdComponentList() :
{
   NodeList n0 = new NodeList();
   DefinitiveObjIdComponent n1;

   
}
{
   (
      n1=DefinitiveObjIdComponent()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new DefinitiveObjIdComponentList(n0); }
}

DefinitiveObjIdComponent DefinitiveObjIdComponent() :
{
   NodeChoice n0;
   DefinitiveNameAndNumberForm n1;
   NameForm n2;
   DefinitiveNumberForm n3;

   
}
{
   (
      n1=DefinitiveNameAndNumberForm()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=NameForm()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=DefinitiveNumberForm()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new DefinitiveObjIdComponent(n0); }
}

DefinitiveNumberForm DefinitiveNumberForm() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new DefinitiveNumberForm(n0); }
}

DefinitiveNameAndNumberForm DefinitiveNameAndNumberForm() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   DefinitiveNumberForm n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<LEFT_PARENTHESIS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=DefinitiveNumberForm()
   n6=<RIGHT_PARENTHESIS_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new DefinitiveNameAndNumberForm(n0,n2,n4,n5); }
}

TagDefault TagDefault() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeSequence n6;
   NodeToken n7;
   Token n8;
   NodeToken n9;
   Token n10;
   NodeSequence n11;
   NodeToken n12;
   Token n13;
   NodeToken n14;
   Token n15;

   
}
{
   (
      { n1 = new NodeSequence(2); }
      n3=<EXPLICIT_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<TAGS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n6 = new NodeSequence(2); }
      n8=<IMPLICIT_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n6.addNode(n7); }
      n10=<TAGS_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n6.addNode(n9); }
      { n0 = new NodeChoice(n6, 1); }
   |
      { n11 = new NodeSequence(2); }
      n13=<AUTOMATIC_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n11.addNode(n12); }
      n15=<TAGS_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n11.addNode(n14); }
      { n0 = new NodeChoice(n11, 2); }
   )
   
   { return new TagDefault(n0); }
}

ExtensionDefault ExtensionDefault() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<EXTENSIBILITY_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<IMPLIED_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new ExtensionDefault(n0,n2); }
}

ModuleBody ModuleBody() :
{
   NodeOptional n0 = new NodeOptional();
   Exports n1;
   NodeOptional n2 = new NodeOptional();
   Imports n3;
   AssignmentList n4;

   
}
{
   (
      n1=Exports()
      { n0.addNode(n1); }
   )?
   (
      n3=Imports()
      { n2.addNode(n3); }
   )?
   n4=AssignmentList()
   
   { return new ModuleBody(n0,n2,n4); }
}

Exports Exports() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeOptional n4 = new NodeOptional();
   SymbolsExported n5;
   NodeToken n6;
   Token n7;
   NodeSequence n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<EXPORTS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      (
         n5=SymbolsExported()
         { n4.addNode(n5); }
      )?
      { n1.addNode(n4); }
      n7=<SEMICOLON_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n8 = new NodeSequence(3); }
      n10=<EXPORTS_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n8.addNode(n9); }
      n12=<ALL_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n8.addNode(n11); }
      n14=<SEMICOLON_TKN> { n13 = JTBToolkit.makeNodeToken(n14); }
      { n8.addNode(n13); }
      { n0 = new NodeChoice(n8, 1); }
   )
   
   { return new Exports(n0); }
}

SymbolsExported SymbolsExported() :
{
   SymbolList n0;

   
}
{
   n0=SymbolList()
   
   { return new SymbolsExported(n0); }
}

Imports Imports() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   SymbolsImported n3;
   NodeToken n4;
   Token n5;

   
}
{
   n1=<IMPORTS_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=SymbolsImported()
      { n2.addNode(n3); }
   )?
   n5=<SEMICOLON_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
   
   { return new Imports(n0,n2,n4); }
}

SymbolsImported SymbolsImported() :
{
   SymbolsFromModuleList n0;

   
}
{
   n0=SymbolsFromModuleList()
   
   { return new SymbolsImported(n0); }
}

SymbolsFromModuleList SymbolsFromModuleList() :
{
   NodeList n0 = new NodeList();
   SymbolsFromModule n1;

   
}
{
   (
      n1=SymbolsFromModule()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new SymbolsFromModuleList(n0); }
}

SymbolsFromModule SymbolsFromModule() :
{
   SymbolList n0;
   NodeToken n1;
   Token n2;
   GlobalModuleReference n3;

   
}
{
   n0=SymbolList()
   n2=<FROM_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   n3=GlobalModuleReference()
   
   { return new SymbolsFromModule(n0,n1,n3); }
}

GlobalModuleReference GlobalModuleReference() :
{
   modulereference n0;
   NodeOptional n1 = new NodeOptional();
   AssignedIdentifier n2;

   
}
{
   n0=modulereference()
   (
      n2=AssignedIdentifier()
      { n1.addNode(n2); }
   )?
   
   { return new GlobalModuleReference(n0,n1); }
}

AssignedIdentifier AssignedIdentifier() :
{
   NodeChoice n0;
   ObjectIdentifierValue n1;
   DefinedValue n2;

   
}
{
   (
      n1=ObjectIdentifierValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=DefinedValue()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new AssignedIdentifier(n0); }
}

SymbolList SymbolList() :
{
   Symbol n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   Symbol n5;

   
}
{
   n0=Symbol()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=Symbol()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new SymbolList(n0,n1); }
}

Symbol Symbol() :
{
   Reference n0;

   
}
{
   n0=Reference()
   
   { return new Symbol(n0); }
}

Reference Reference() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   valuereference n3;

   
}
{
   (
      n2=<TYPEREFERENCE> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=valuereference()
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new Reference(n0); }
}

AssignmentList AssignmentList() :
{
   NodeList n0 = new NodeList();
   Assignment n1;

   
}
{
   (
      n1=Assignment()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new AssignmentList(n0); }
}

Assignment Assignment() :
{
   NodeChoice n0;
   TypeAssignment n1;
   ValueAssignment n2;
   XMLValueAssignment n3;
   ValueSetTypeAssignment n4;

   
}
{
   (
      n1=TypeAssignment()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=ValueAssignment()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=XMLValueAssignment()
      { n0 = new NodeChoice(n3, 2); }
   |
      n4=ValueSetTypeAssignment()
      { n0 = new NodeChoice(n4, 3); }
   )
   
   { return new Assignment(n0); }
}

DefinedType DefinedType() :
{
   NodeChoice n0;
   ExternalTypeReference n1;
   NodeToken n2;
   Token n3;

   
}
{
   (
      n1=ExternalTypeReference()
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=<TYPEREFERENCE> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new DefinedType(n0); }
}

ExternalTypeReference ExternalTypeReference() :
{
   modulereference n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   n0=modulereference()
   n2=<DOT_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   n4=<TYPEREFERENCE> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new ExternalTypeReference(n0,n1,n3); }
}

NonParameterizedTypeName NonParameterizedTypeName() :
{
   NodeChoice n0;
   ExternalTypeReference n1;
   NodeToken n2;
   Token n3;
   xmlasn1typename n4;

   
}
{
   (
      n1=ExternalTypeReference()
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=<TYPEREFERENCE> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n0 = new NodeChoice(n2, 1); }
   |
      n4=xmlasn1typename()
      { n0 = new NodeChoice(n4, 2); }
   )
   
   { return new NonParameterizedTypeName(n0); }
}

DefinedValue DefinedValue() :
{
   NodeChoice n0;
   ExternalValueReference n1;
   valuereference n2;

   
}
{
   (
      n1=ExternalValueReference()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=valuereference()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new DefinedValue(n0); }
}

ExternalValueReference ExternalValueReference() :
{
   modulereference n0;
   NodeToken n1;
   Token n2;
   valuereference n3;

   
}
{
   n0=modulereference()
   n2=<DOT_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   n3=valuereference()
   
   { return new ExternalValueReference(n0,n1,n3); }
}

AbsoluteReference AbsoluteReference() :
{
   NodeToken n0;
   Token n1;
   ModuleIdentifier n2;
   NodeToken n3;
   Token n4;
   ItemSpec n5;

   
}
{
   n1=<AT_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ModuleIdentifier()
   n4=<DOT_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   n5=ItemSpec()
   
   { return new AbsoluteReference(n0,n2,n3,n5); }
}

ItemSpec ItemSpec() :
{
   NodeToken n0;
   Token n1;
   NodeListOptional n2 = new NodeListOptional();
   NodeSequence n3;
   NodeToken n4;
   Token n5;
   ComponentId n6;

   
}
{
   n1=<TYPEREFERENCE> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      { n3 = new NodeSequence(2); }
      n5=<DOT_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n6=ComponentId()
      { n3.addNode(n6); }
      { n2.addNode(n3); }
   )*
   { n2.nodes.trimToSize(); }
   
   { return new ItemSpec(n0,n2); }
}

ComponentId ComponentId() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;

   
}
{
   (
      n2=<IDENTIFIER> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<NUMBER> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n6=<STAR_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n0 = new NodeChoice(n5, 2); }
   )
   
   { return new ComponentId(n0); }
}

TypeAssignment TypeAssignment() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   Type n4;

   
}
{
   n1=<TYPEREFERENCE> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<ASSIGN_OP_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=Type()
   
   { return new TypeAssignment(n0,n2,n4); }
}

ValueAssignment ValueAssignment() :
{
   valuereference n0;
   Type n1;
   NodeToken n2;
   Token n3;
   Value n4;

   
}
{
   n0=valuereference()
   n1=Type()
   n3=<ASSIGN_OP_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=Value()
   
   { return new ValueAssignment(n0,n1,n2,n4); }
}

XMLValueAssignment XMLValueAssignment() :
{
   valuereference n0;
   NodeToken n1;
   Token n2;
   XMLTypedValue n3;

   
}
{
   n0=valuereference()
   n2=<ASSIGN_OP_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   n3=XMLTypedValue()
   
   { return new XMLValueAssignment(n0,n1,n3); }
}

XMLTypedValue XMLTypedValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NonParameterizedTypeName n6;
   NodeToken n7;
   Token n8;
   XMLValue n9;
   NodeToken n10;
   Token n11;
   NodeToken n12;
   Token n13;
   NonParameterizedTypeName n14;
   NodeToken n15;
   Token n16;
   NodeSequence n17;
   NodeToken n18;
   Token n19;
   NodeToken n20;
   Token n21;
   NonParameterizedTypeName n22;
   NodeToken n23;
   Token n24;

   
}
{
   (
      { n1 = new NodeSequence(9); }
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n6=NonParameterizedTypeName()
      { n1.addNode(n6); }
      n8=<GREATER_THAN_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n1.addNode(n7); }
      n9=XMLValue()
      { n1.addNode(n9); }
      n11=<XMLENDTAGBRACKET_TKN> { n10 = JTBToolkit.makeNodeToken(n11); }
      { n1.addNode(n10); }
      n13=<AMPERSAND_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n1.addNode(n12); }
      n14=NonParameterizedTypeName()
      { n1.addNode(n14); }
      n16=<GREATER_THAN_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n1.addNode(n15); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n17 = new NodeSequence(4); }
      n19=<LESSER_THAN_TKN> { n18 = JTBToolkit.makeNodeToken(n19); }
      { n17.addNode(n18); }
      n21=<AMPERSAND_TKN> { n20 = JTBToolkit.makeNodeToken(n21); }
      { n17.addNode(n20); }
      n22=NonParameterizedTypeName()
      { n17.addNode(n22); }
      n24=<XMLTAGTERMINATINGBRACKET_TKN> { n23 = JTBToolkit.makeNodeToken(n24); }
      { n17.addNode(n23); }
      { n0 = new NodeChoice(n17, 1); }
   )
   
   { return new XMLTypedValue(n0); }
}

ValueSetTypeAssignment ValueSetTypeAssignment() :
{
   NodeToken n0;
   Token n1;
   Type n2;
   NodeToken n3;
   Token n4;
   ValueSet n5;

   
}
{
   n1=<TYPEREFERENCE> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Type()
   n4=<ASSIGN_OP_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   n5=ValueSet()
   
   { return new ValueSetTypeAssignment(n0,n2,n3,n5); }
}

ValueSet ValueSet() :
{
   NodeToken n0;
   Token n1;
   ElementSetSpecs n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ElementSetSpecs()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new ValueSet(n0,n2,n3); }
}

Type Type() :
{
   NodeChoice n0;
   NormalConstrainedType n1;
   TypeWithConstraint n2;

   
}
{
   (
      n1=NormalConstrainedType()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=TypeWithConstraint()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new Type(n0); }
}

NormalConstrainedType NormalConstrainedType() :
{
   NodeChoice n0;
   BuiltinType n1;
   ReferencedType n2;
   NodeListOptional n3 = new NodeListOptional();
   Constraint n4;

   
}
{
   (
      (
         n1=BuiltinType()
         { n0 = new NodeChoice(n1, 0); }
      |
         n2=ReferencedType()
         { n0 = new NodeChoice(n2, 1); }
      )
      
   )
   (
      n4=Constraint()
      { n3.addNode(n4); }
   )*
   { n3.nodes.trimToSize(); }
   
   { return new NormalConstrainedType(n0,n3); }
}

BuiltinType BuiltinType() :
{
   NodeChoice n0;
   BitStringType n1;
   BooleanType n2;
   CharacterStringType n3;
   ChoiceType n4;
   EmbeddedPDVType n5;
   EnumeratedType n6;
   ExternalType n7;
   IntegerType n8;
   NullType n9;
   ObjectIdentifierType n10;
   OctetStringType n11;
   RealType n12;
   RelativeOIDType n13;
   SequenceOfType n14;
   SequenceType n15;
   SetOfType n16;
   SetType n17;
   TaggedType n18;

   
}
{
   (
      n1=BitStringType()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=BooleanType()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=CharacterStringType()
      { n0 = new NodeChoice(n3, 2); }
   |
      n4=ChoiceType()
      { n0 = new NodeChoice(n4, 3); }
   |
      n5=EmbeddedPDVType()
      { n0 = new NodeChoice(n5, 4); }
   |
      n6=EnumeratedType()
      { n0 = new NodeChoice(n6, 5); }
   |
      n7=ExternalType()
      { n0 = new NodeChoice(n7, 6); }
   |
      n8=IntegerType()
      { n0 = new NodeChoice(n8, 7); }
   |
      n9=NullType()
      { n0 = new NodeChoice(n9, 8); }
   |
      n10=ObjectIdentifierType()
      { n0 = new NodeChoice(n10, 9); }
   |
      n11=OctetStringType()
      { n0 = new NodeChoice(n11, 10); }
   |
      n12=RealType()
      { n0 = new NodeChoice(n12, 11); }
   |
      n13=RelativeOIDType()
      { n0 = new NodeChoice(n13, 12); }
   |
      n14=SequenceOfType()
      { n0 = new NodeChoice(n14, 13); }
   |
      n15=SequenceType()
      { n0 = new NodeChoice(n15, 14); }
   |
      n16=SetOfType()
      { n0 = new NodeChoice(n16, 15); }
   |
      n17=SetType()
      { n0 = new NodeChoice(n17, 16); }
   |
      n18=TaggedType()
      { n0 = new NodeChoice(n18, 17); }
   )
   
   { return new BuiltinType(n0); }
}

NamedType NamedType() :
{
   NodeToken n0;
   Token n1;
   Type n2;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Type()
   
   { return new NamedType(n0,n2); }
}

ReferencedType ReferencedType() :
{
   NodeChoice n0;
   DefinedType n1;
   UsefulType n2;
   SelectionType n3;

   
}
{
   (
      n1=DefinedType()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=UsefulType()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=SelectionType()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new ReferencedType(n0); }
}

Value Value() :
{
   NodeChoice n0;
   BuiltinValue n1;
   ReferencedValue n2;

   
}
{
   (
      n1=BuiltinValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=ReferencedValue()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new Value(n0); }
}

XMLValue XMLValue() :
{
   XMLBuiltinValue n0;

   
}
{
   n0=XMLBuiltinValue()
   
   { return new XMLValue(n0); }
}

BuiltinValue BuiltinValue() :
{
   NodeChoice n0;
   BitStringValue n1;
   BooleanValue n2;
   CharacterStringValue n3;
   ChoiceValue n4;
   EmbeddedPDVValue n5;
   IntegerValue n6;
   NullValue n7;
   ObjectIdentifierValue n8;
   OctetStringValue n9;
   RealValue n10;
   RelativeOIDValue n11;
   SequenceValue n12;
   SequenceOfValue n13;
   SetValue n14;
   SetOfValue n15;

   
}
{
   (
      n1=BitStringValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=BooleanValue()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=CharacterStringValue()
      { n0 = new NodeChoice(n3, 2); }
   |
      n4=ChoiceValue()
      { n0 = new NodeChoice(n4, 3); }
   |
      n5=EmbeddedPDVValue()
      { n0 = new NodeChoice(n5, 4); }
   |
      n6=IntegerValue()
      { n0 = new NodeChoice(n6, 5); }
   |
      n7=NullValue()
      { n0 = new NodeChoice(n7, 6); }
   |
      n8=ObjectIdentifierValue()
      { n0 = new NodeChoice(n8, 7); }
   |
      n9=OctetStringValue()
      { n0 = new NodeChoice(n9, 8); }
   |
      n10=RealValue()
      { n0 = new NodeChoice(n10, 9); }
   |
      n11=RelativeOIDValue()
      { n0 = new NodeChoice(n11, 10); }
   |
      n12=SequenceValue()
      { n0 = new NodeChoice(n12, 11); }
   |
      n13=SequenceOfValue()
      { n0 = new NodeChoice(n13, 12); }
   |
      n14=SetValue()
      { n0 = new NodeChoice(n14, 13); }
   |
      n15=SetOfValue()
      { n0 = new NodeChoice(n15, 14); }
   )
   
   { return new BuiltinValue(n0); }
}

XMLBuiltinValue XMLBuiltinValue() :
{
   NodeChoice n0;
   NodeOptional n1 = new NodeOptional();
   XMLBitStringValue n2;
   XMLBooleanValue n3;
   XMLCharacterStringValue n4;
   XMLChoiceValue n5;
   XMLEmbeddedPDVValue n6;
   XMLEnumeratedValue n7;
   XMLExternalValue n8;
   XMLIntegerValue n9;
   XMLNullValue n10;
   XMLObjectIdentifierValue n11;
   XMLOctetStringValue n12;
   XMLRealValue n13;
   XMLRelativeOIDValue n14;
   NodeOptional n15 = new NodeOptional();
   XMLSequenceValue n16;
   NodeOptional n17 = new NodeOptional();
   XMLSequenceOfValue n18;
   NodeOptional n19 = new NodeOptional();
   XMLSetValue n20;
   NodeOptional n21 = new NodeOptional();
   XMLSetOfValue n22;

   
}
{
   (
      (
         n2=XMLBitStringValue()
         { n1.addNode(n2); }
      )?
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=XMLBooleanValue()
      { n0 = new NodeChoice(n3, 1); }
   |
      n4=XMLCharacterStringValue()
      { n0 = new NodeChoice(n4, 2); }
   |
      n5=XMLChoiceValue()
      { n0 = new NodeChoice(n5, 3); }
   |
      n6=XMLEmbeddedPDVValue()
      { n0 = new NodeChoice(n6, 4); }
   |
      n7=XMLEnumeratedValue()
      { n0 = new NodeChoice(n7, 5); }
   |
      n8=XMLExternalValue()
      { n0 = new NodeChoice(n8, 6); }
   |
      n9=XMLIntegerValue()
      { n0 = new NodeChoice(n9, 7); }
   |
      n10=XMLNullValue()
      { n0 = new NodeChoice(n10, 8); }
   |
      n11=XMLObjectIdentifierValue()
      { n0 = new NodeChoice(n11, 9); }
   |
      n12=XMLOctetStringValue()
      { n0 = new NodeChoice(n12, 10); }
   |
      n13=XMLRealValue()
      { n0 = new NodeChoice(n13, 11); }
   |
      n14=XMLRelativeOIDValue()
      { n0 = new NodeChoice(n14, 12); }
   |
      (
         n16=XMLSequenceValue()
         { n15.addNode(n16); }
      )?
      { n0 = new NodeChoice(n15, 13); }
   |
      (
         n18=XMLSequenceOfValue()
         { n17.addNode(n18); }
      )?
      { n0 = new NodeChoice(n17, 14); }
   |
      (
         n20=XMLSetValue()
         { n19.addNode(n20); }
      )?
      { n0 = new NodeChoice(n19, 15); }
   |
      (
         n22=XMLSetOfValue()
         { n21.addNode(n22); }
      )?
      { n0 = new NodeChoice(n21, 16); }
   )
   
   { return new XMLBuiltinValue(n0); }
}

ReferencedValue ReferencedValue() :
{
   DefinedValue n0;

   
}
{
   n0=DefinedValue()
   
   { return new ReferencedValue(n0); }
}

NamedValue NamedValue() :
{
   NodeToken n0;
   Token n1;
   Value n2;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Value()
   
   { return new NamedValue(n0,n2); }
}

XMLNamedValue XMLNamedValue() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   XMLValue n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   NodeToken n15;
   Token n16;

   
}
{
   n1=<LESSER_THAN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<AMPERSAND_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n5=<IDENTIFIER> { n4 = JTBToolkit.makeNodeToken(n5); }
   n7=<GREATER_THAN_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   n8=XMLValue()
   n10=<XMLENDTAGBRACKET_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
   n12=<AMPERSAND_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
   n14=<IDENTIFIER> { n13 = JTBToolkit.makeNodeToken(n14); }
   n16=<GREATER_THAN_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
   
   { return new XMLNamedValue(n0,n2,n4,n6,n8,n9,n11,n13,n15); }
}

BooleanType BooleanType() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<BOOLEAN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new BooleanType(n0); }
}

BooleanValue BooleanValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   (
      n2=<TRUE_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<FALSE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new BooleanValue(n0); }
}

XMLBooleanValue XMLBooleanValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;
   NodeSequence n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   NodeToken n15;
   Token n16;
   NodeToken n17;
   Token n18;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n7=<IDENTIFIER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      n9=<XMLTAGTERMINATINGBRACKET_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n1.addNode(n8); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n10 = new NodeSequence(4); }
      n12=<LESSER_THAN_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n10.addNode(n11); }
      n14=<AMPERSAND_TKN> { n13 = JTBToolkit.makeNodeToken(n14); }
      { n10.addNode(n13); }
      n16=<IDENTIFIER> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n10.addNode(n15); }
      n18=<XMLTAGTERMINATINGBRACKET_TKN> { n17 = JTBToolkit.makeNodeToken(n18); }
      { n10.addNode(n17); }
      { n0 = new NodeChoice(n10, 1); }
   )
   
   { return new XMLBooleanValue(n0); }
}

IntegerType IntegerType() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   NodeSequence n3;
   NodeToken n4;
   Token n5;
   NamedNumberList n6;
   NodeToken n7;
   Token n8;

   
}
{
   n1=<INTEGER_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      { n3 = new NodeSequence(3); }
      n5=<LEFT_BRACE_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n6=NamedNumberList()
      { n3.addNode(n6); }
      n8=<RIGHT_BRACE_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n3.addNode(n7); }
      { n2.addNode(n3); }
   )?
   
   { return new IntegerType(n0,n2); }
}

NamedNumberList NamedNumberList() :
{
   NamedNumber n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedNumber n5;

   
}
{
   n0=NamedNumber()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedNumber()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new NamedNumberList(n0,n1); }
}

NamedNumber NamedNumber() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   SignedNumber n6;
   NodeToken n7;
   Token n8;
   NodeSequence n9;
   NodeToken n10;
   Token n11;
   NodeToken n12;
   Token n13;
   DefinedValue n14;
   NodeToken n15;
   Token n16;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<IDENTIFIER> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<LEFT_PARENTHESIS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n6=SignedNumber()
      { n1.addNode(n6); }
      n8=<RIGHT_PARENTHESIS_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n1.addNode(n7); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n9 = new NodeSequence(4); }
      n11=<IDENTIFIER> { n10 = JTBToolkit.makeNodeToken(n11); }
      { n9.addNode(n10); }
      n13=<LEFT_PARENTHESIS_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n9.addNode(n12); }
      n14=DefinedValue()
      { n9.addNode(n14); }
      n16=<RIGHT_PARENTHESIS_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n9.addNode(n15); }
      { n0 = new NodeChoice(n9, 1); }
   )
   
   { return new NamedNumber(n0); }
}

SignedNumber SignedNumber() :
{
   NodeOptional n0 = new NodeOptional();
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   (
      n2=<MINUS_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0.addNode(n1); }
   )?
   n4=<NUMBER> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new SignedNumber(n0,n3); }
}

IntegerValue IntegerValue() :
{
   SignedNumber n0;

   
}
{
   n0=SignedNumber()
   
   { return new IntegerValue(n0); }
}

XMLIntegerValue XMLIntegerValue() :
{
   NodeChoice n0;
   SignedNumber n1;
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;
   NodeToken n7;
   Token n8;
   NodeToken n9;
   Token n10;

   
}
{
   (
      n1=SignedNumber()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(4); }
      n4=<LESSER_THAN_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n6=<AMPERSAND_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n2.addNode(n5); }
      n8=<IDENTIFIER> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n2.addNode(n7); }
      n10=<XMLTAGTERMINATINGBRACKET_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n2.addNode(n9); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLIntegerValue(n0); }
}

EnumeratedType EnumeratedType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   Enumerations n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<ENUMERATED_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=Enumerations()
   n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new EnumeratedType(n0,n2,n4,n5); }
}

Enumerations Enumerations() :
{
   RootEnumeration n0;
   NodeOptional n1 = new NodeOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;
   NodeOptional n7 = new NodeOptional();
   ExceptionSpec n8;
   NodeOptional n9 = new NodeOptional();
   NodeSequence n10;
   NodeToken n11;
   Token n12;
   AdditionalEnumeration n13;

   
}
{
   n0=RootEnumeration()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n6=<ELLIPSIS_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )?
   (
      n8=ExceptionSpec()
      { n7.addNode(n8); }
   )?
   (
      { n10 = new NodeSequence(2); }
      n12=<COMMA_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n10.addNode(n11); }
      n13=AdditionalEnumeration()
      { n10.addNode(n13); }
      { n9.addNode(n10); }
   )?
   
   { return new Enumerations(n0,n1,n7,n9); }
}

RootEnumeration RootEnumeration() :
{
   ASNEnumeration n0;

   
}
{
   n0=ASNEnumeration()
   
   { return new RootEnumeration(n0); }
}

AdditionalEnumeration AdditionalEnumeration() :
{
   ASNEnumeration n0;

   
}
{
   n0=ASNEnumeration()
   
   { return new AdditionalEnumeration(n0); }
}

ASNEnumeration ASNEnumeration() :
{
   EnumerationItem n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   EnumerationItem n5;

   
}
{
   n0=EnumerationItem()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=EnumerationItem()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ASNEnumeration(n0,n1); }
}

EnumerationItem EnumerationItem() :
{
   NodeChoice n0;
   NamedNumber n1;
   NodeToken n2;
   Token n3;

   
}
{
   (
      n1=NamedNumber()
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=<IDENTIFIER> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new EnumerationItem(n0); }
}

EnumeratedValue EnumeratedValue() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new EnumeratedValue(n0); }
}

XMLEnumeratedValue XMLEnumeratedValue() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;

   
}
{
   n1=<LESSER_THAN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<AMPERSAND_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n5=<IDENTIFIER> { n4 = JTBToolkit.makeNodeToken(n5); }
   n7=<XMLTAGTERMINATINGBRACKET_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   
   { return new XMLEnumeratedValue(n0,n2,n4,n6); }
}

RealType RealType() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<REAL_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new RealType(n0); }
}

RealValue RealValue() :
{
   NodeChoice n0;
   NumericRealValue n1;
   SpecialRealValue n2;

   
}
{
   (
      n1=NumericRealValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=SpecialRealValue()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new RealValue(n0); }
}

NumericRealValue NumericRealValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeSequence n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   SequenceValue n8;

   
}
{
   (
      n2=<REALNUMBER> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n3 = new NodeSequence(2); }
      n5=<MINUS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n7=<REALNUMBER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n3.addNode(n6); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n8=SequenceValue()
      { n0 = new NodeChoice(n8, 2); }
   )
   
   { return new NumericRealValue(n0); }
}

SpecialRealValue SpecialRealValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   (
      n2=<PLUS_INFINITY_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<MINUS_INFINITY_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new SpecialRealValue(n0); }
}

XMLRealValue XMLRealValue() :
{
   NodeChoice n0;
   XMLNumericRealValue n1;
   XMLSpecialRealValue n2;

   
}
{
   (
      n1=XMLNumericRealValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLSpecialRealValue()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLRealValue(n0); }
}

XMLNumericRealValue XMLNumericRealValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeSequence n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;

   
}
{
   (
      n2=<REALNUMBER> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n3 = new NodeSequence(2); }
      n5=<MINUS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n7=<REALNUMBER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n3.addNode(n6); }
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new XMLNumericRealValue(n0); }
}

XMLSpecialRealValue XMLSpecialRealValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;
   NodeSequence n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   NodeToken n15;
   Token n16;
   NodeToken n17;
   Token n18;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n7=<PLUS_INFINITY_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      n9=<XMLTAGTERMINATINGBRACKET_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n1.addNode(n8); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n10 = new NodeSequence(4); }
      n12=<LESSER_THAN_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n10.addNode(n11); }
      n14=<AMPERSAND_TKN> { n13 = JTBToolkit.makeNodeToken(n14); }
      { n10.addNode(n13); }
      n16=<MINUS_INFINITY_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n10.addNode(n15); }
      n18=<XMLTAGTERMINATINGBRACKET_TKN> { n17 = JTBToolkit.makeNodeToken(n18); }
      { n10.addNode(n17); }
      { n0 = new NodeChoice(n10, 1); }
   )
   
   { return new XMLSpecialRealValue(n0); }
}

BitStringType BitStringType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeOptional n4 = new NodeOptional();
   NodeSequence n5;
   NodeToken n6;
   Token n7;
   NamedBitList n8;
   NodeToken n9;
   Token n10;

   
}
{
   n1=<BIT_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<STRING_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   (
      { n5 = new NodeSequence(3); }
      n7=<LEFT_BRACE_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n5.addNode(n6); }
      n8=NamedBitList()
      { n5.addNode(n8); }
      n10=<RIGHT_BRACE_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n5.addNode(n9); }
      { n4.addNode(n5); }
   )?
   
   { return new BitStringType(n0,n2,n4); }
}

NamedBitList NamedBitList() :
{
   NamedBit n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedBit n5;

   
}
{
   n0=NamedBit()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedBit()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new NamedBitList(n0,n1); }
}

NamedBit NamedBit() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;
   NodeSequence n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   DefinedValue n15;
   NodeToken n16;
   Token n17;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<IDENTIFIER> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<LEFT_PARENTHESIS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n7=<NUMBER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      n9=<RIGHT_PARENTHESIS_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n1.addNode(n8); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n10 = new NodeSequence(4); }
      n12=<IDENTIFIER> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n10.addNode(n11); }
      n14=<LEFT_PARENTHESIS_TKN> { n13 = JTBToolkit.makeNodeToken(n14); }
      { n10.addNode(n13); }
      n15=DefinedValue()
      { n10.addNode(n15); }
      n17=<RIGHT_PARENTHESIS_TKN> { n16 = JTBToolkit.makeNodeToken(n17); }
      { n10.addNode(n16); }
      { n0 = new NodeChoice(n10, 1); }
   )
   
   { return new NamedBit(n0); }
}

BitStringValue BitStringValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeSequence n5;
   NodeToken n6;
   Token n7;
   IdentifierList n8;
   NodeToken n9;
   Token n10;
   NodeSequence n11;
   NodeToken n12;
   Token n13;
   NodeToken n14;
   Token n15;
   NodeSequence n16;
   NodeToken n17;
   Token n18;
   Value n19;

   
}
{
   (
      n2=<BSTRING> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<HSTRING> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      { n5 = new NodeSequence(3); }
      n7=<LEFT_BRACE_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n5.addNode(n6); }
      n8=IdentifierList()
      { n5.addNode(n8); }
      n10=<RIGHT_BRACE_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n5.addNode(n9); }
      { n0 = new NodeChoice(n5, 2); }
   |
      { n11 = new NodeSequence(2); }
      n13=<LEFT_BRACE_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n11.addNode(n12); }
      n15=<RIGHT_BRACE_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n11.addNode(n14); }
      { n0 = new NodeChoice(n11, 3); }
   |
      { n16 = new NodeSequence(2); }
      n18=<CONTAINING_TKN> { n17 = JTBToolkit.makeNodeToken(n18); }
      { n16.addNode(n17); }
      n19=Value()
      { n16.addNode(n19); }
      { n0 = new NodeChoice(n16, 4); }
   )
   
   { return new BitStringValue(n0); }
}

IdentifierList IdentifierList() :
{
   NodeToken n0;
   Token n1;
   NodeListOptional n2 = new NodeListOptional();
   NodeSequence n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      { n3 = new NodeSequence(2); }
      n5=<COMMA_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n7=<IDENTIFIER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n3.addNode(n6); }
      { n2.addNode(n3); }
   )*
   { n2.nodes.trimToSize(); }
   
   { return new IdentifierList(n0,n2); }
}

XMLBitStringValue XMLBitStringValue() :
{
   NodeChoice n0;
   XMLTypedValue n1;
   NodeToken n2;
   Token n3;
   XMLIdentifierList n4;

   
}
{
   (
      n1=XMLTypedValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=<CSTRING> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n0 = new NodeChoice(n2, 1); }
   |
      n4=XMLIdentifierList()
      { n0 = new NodeChoice(n4, 2); }
   )
   
   { return new XMLBitStringValue(n0); }
}

XMLIdentifierList XMLIdentifierList() :
{
   NodeList n0 = new NodeList();
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n7=<IDENTIFIER> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      n9=<XMLTAGTERMINATINGBRACKET_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n1.addNode(n8); }
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new XMLIdentifierList(n0); }
}

OctetStringType OctetStringType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<OCTET_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<STRING_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new OctetStringType(n0,n2); }
}

OctetStringValue OctetStringValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeSequence n5;
   NodeToken n6;
   Token n7;
   Value n8;

   
}
{
   (
      n2=<BSTRING> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<HSTRING> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      { n5 = new NodeSequence(2); }
      n7=<CONTAINING_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n5.addNode(n6); }
      n8=Value()
      { n5.addNode(n8); }
      { n0 = new NodeChoice(n5, 2); }
   )
   
   { return new OctetStringValue(n0); }
}

XMLOctetStringValue XMLOctetStringValue() :
{
   NodeChoice n0;
   XMLTypedValue n1;
   NodeToken n2;
   Token n3;

   
}
{
   (
      n1=XMLTypedValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=<CSTRING> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLOctetStringValue(n0); }
}

NullType NullType() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NULL_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new NullType(n0); }
}

NullValue NullValue() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NULL_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new NullValue(n0); }
}

XMLNullValue XMLNullValue() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NULL_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new XMLNullValue(n0); }
}

SequenceType SequenceType() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   ExtensionAndException n6;
   NodeOptional n7 = new NodeOptional();
   OptionalExtensionMarker n8;
   NodeToken n9;
   Token n10;
   NodeSequence n11;
   NodeToken n12;
   Token n13;
   NodeToken n14;
   Token n15;
   ComponentTypeLists n16;
   NodeToken n17;
   Token n18;
   NodeSequence n19;
   NodeToken n20;
   Token n21;
   NodeToken n22;
   Token n23;
   NodeToken n24;
   Token n25;

   
}
{
   (
      { n1 = new NodeSequence(5); }
      n3=<SEQUENCE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<LEFT_BRACE_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n6=ExtensionAndException()
      { n1.addNode(n6); }
      (
         n8=OptionalExtensionMarker()
         { n7.addNode(n8); }
      )?
      { n1.addNode(n7); }
      n10=<RIGHT_BRACE_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n1.addNode(n9); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n11 = new NodeSequence(4); }
      n13=<SEQUENCE_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n11.addNode(n12); }
      n15=<LEFT_BRACE_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n11.addNode(n14); }
      n16=ComponentTypeLists()
      { n11.addNode(n16); }
      n18=<RIGHT_BRACE_TKN> { n17 = JTBToolkit.makeNodeToken(n18); }
      { n11.addNode(n17); }
      { n0 = new NodeChoice(n11, 1); }
   |
      { n19 = new NodeSequence(3); }
      n21=<SEQUENCE_TKN> { n20 = JTBToolkit.makeNodeToken(n21); }
      { n19.addNode(n20); }
      n23=<LEFT_BRACE_TKN> { n22 = JTBToolkit.makeNodeToken(n23); }
      { n19.addNode(n22); }
      n25=<RIGHT_BRACE_TKN> { n24 = JTBToolkit.makeNodeToken(n25); }
      { n19.addNode(n24); }
      { n0 = new NodeChoice(n19, 2); }
   )
   
   { return new SequenceType(n0); }
}

ExtensionAndException ExtensionAndException() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   ExceptionSpec n3;

   
}
{
   n1=<ELLIPSIS_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=ExceptionSpec()
      { n2.addNode(n3); }
   )?
   
   { return new ExtensionAndException(n0,n2); }
}

OptionalExtensionMarker OptionalExtensionMarker() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<COMMA_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<ELLIPSIS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new OptionalExtensionMarker(n0,n2); }
}

ComponentTypeLists ComponentTypeLists() :
{
   NodeChoice n0;
   NodeSequence n1;
   RootComponentTypeList n2;
   NodeOptional n3 = new NodeOptional();
   NodeSequence n4;
   NodeToken n5;
   Token n6;
   ExtensionAndException n7;
   NodeOptional n8;
   ExtensionAdditions n9;
   NodeOptional n10;
   NodeSequence n11;
   ExtensionEndMarker n12;
   NodeOptional n13;
   NodeSequence n14;
   NodeToken n15;
   Token n16;
   RootComponentTypeList n17;
   NodeSequence n18;
   ExtensionAndException n19;
   NodeOptional n20 = new NodeOptional();
   ExtensionAdditions n21;
   NodeOptional n22 = new NodeOptional();
   NodeSequence n23;
   ExtensionEndMarker n24;
   NodeOptional n25;
   NodeSequence n26;
   NodeToken n27;
   Token n28;
   RootComponentTypeList n29;

   
}
{
   (
      { n1 = new NodeSequence(2); }
      n2=RootComponentTypeList()
      { n1.addNode(n2); }
      (
         { n8 = new NodeOptional(); }
         { n10 = new NodeOptional(); }
         { n4 = new NodeSequence(4); }
         n6=<COMMA_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
         { n4.addNode(n5); }
         n7=ExtensionAndException()
         { n4.addNode(n7); }
         (
            n9=ExtensionAdditions()
            { n8.addNode(n9); }
         )?
         { n4.addNode(n8); }
         (
            { n13 = new NodeOptional(); }
            { n11 = new NodeSequence(2); }
            n12=ExtensionEndMarker()
            { n11.addNode(n12); }
            (
               { n14 = new NodeSequence(2); }
               n16=<COMMA_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
               { n14.addNode(n15); }
               n17=RootComponentTypeList()
               { n14.addNode(n17); }
               { n13.addNode(n14); }
            )?
            { n11.addNode(n13); }
            { n10.addNode(n11); }
         )?
         { n4.addNode(n10); }
         { n3.addNode(n4); }
      )?
      { n1.addNode(n3); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n18 = new NodeSequence(3); }
      n19=ExtensionAndException()
      { n18.addNode(n19); }
      (
         n21=ExtensionAdditions()
         { n20.addNode(n21); }
      )?
      { n18.addNode(n20); }
      (
         { n25 = new NodeOptional(); }
         { n23 = new NodeSequence(2); }
         n24=ExtensionEndMarker()
         { n23.addNode(n24); }
         (
            { n26 = new NodeSequence(2); }
            n28=<COMMA_TKN> { n27 = JTBToolkit.makeNodeToken(n28); }
            { n26.addNode(n27); }
            n29=RootComponentTypeList()
            { n26.addNode(n29); }
            { n25.addNode(n26); }
         )?
         { n23.addNode(n25); }
         { n22.addNode(n23); }
      )?
      { n18.addNode(n22); }
      { n0 = new NodeChoice(n18, 1); }
   )
   
   { return new ComponentTypeLists(n0); }
}

RootComponentTypeList RootComponentTypeList() :
{
   ComponentTypeList n0;

   
}
{
   n0=ComponentTypeList()
   
   { return new RootComponentTypeList(n0); }
}

ExtensionEndMarker ExtensionEndMarker() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<COMMA_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<ELLIPSIS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new ExtensionEndMarker(n0,n2); }
}

ExtensionAdditions ExtensionAdditions() :
{
   NodeToken n0;
   Token n1;
   ExtensionAdditionList n2;

   
}
{
   n1=<COMMA_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ExtensionAdditionList()
   
   { return new ExtensionAdditions(n0,n2); }
}

ExtensionAdditionList ExtensionAdditionList() :
{
   ExtensionAddition n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   ExtensionAddition n5;

   
}
{
   n0=ExtensionAddition()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=ExtensionAddition()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ExtensionAdditionList(n0,n1); }
}

ExtensionAddition ExtensionAddition() :
{
   NodeChoice n0;
   ComponentType n1;
   ExtensionAdditionGroup n2;

   
}
{
   (
      n1=ComponentType()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=ExtensionAdditionGroup()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new ExtensionAddition(n0); }
}

ExtensionAdditionGroup ExtensionAdditionGroup() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   VersionNumber n3;
   ComponentTypeList n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<VERSIONBRACKET_START_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=VersionNumber()
      { n2.addNode(n3); }
   )?
   n4=ComponentTypeList()
   n6=<VERSIONBRACKET_END_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new ExtensionAdditionGroup(n0,n2,n4,n5); }
}

VersionNumber VersionNumber() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<COLON_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new VersionNumber(n0,n2); }
}

ComponentTypeList ComponentTypeList() :
{
   ComponentType n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   ComponentType n5;

   
}
{
   n0=ComponentType()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=ComponentType()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ComponentTypeList(n0,n1); }
}

ComponentType ComponentType() :
{
   NodeChoice n0;
   NodeSequence n1;
   NamedType n2;
   NodeOptional n3 = new NodeOptional();
   NodeChoice n4;
   NodeToken n5;
   Token n6;
   NodeSequence n7;
   NodeToken n8;
   Token n9;
   Value n10;
   NodeSequence n11;
   NodeToken n12;
   Token n13;
   NodeToken n14;
   Token n15;
   Type n16;

   
}
{
   (
      { n1 = new NodeSequence(2); }
      n2=NamedType()
      { n1.addNode(n2); }
      (
         (
            n6=<OPTIONAL_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
            { n4 = new NodeChoice(n5, 0); }
         |
            { n7 = new NodeSequence(2); }
            n9=<DEFAULT_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
            { n7.addNode(n8); }
            n10=Value()
            { n7.addNode(n10); }
            { n4 = new NodeChoice(n7, 1); }
         )
         { n3.addNode(n4); }
      )?
      { n1.addNode(n3); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n11 = new NodeSequence(3); }
      n13=<COMPONENTS_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n11.addNode(n12); }
      n15=<OF_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n11.addNode(n14); }
      n16=Type()
      { n11.addNode(n16); }
      { n0 = new NodeChoice(n11, 1); }
   )
   
   { return new ComponentType(n0); }
}

SequenceValue SequenceValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   ComponentValueList n4;
   NodeToken n5;
   Token n6;
   NodeSequence n7;
   NodeToken n8;
   Token n9;
   NodeToken n10;
   Token n11;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n4=ComponentValueList()
      { n1.addNode(n4); }
      n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n1.addNode(n5); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n7 = new NodeSequence(2); }
      n9=<LEFT_BRACE_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n7.addNode(n8); }
      n11=<RIGHT_BRACE_TKN> { n10 = JTBToolkit.makeNodeToken(n11); }
      { n7.addNode(n10); }
      { n0 = new NodeChoice(n7, 1); }
   )
   
   { return new SequenceValue(n0); }
}

ComponentValueList ComponentValueList() :
{
   NamedValue n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedValue n5;

   
}
{
   n0=NamedValue()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedValue()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ComponentValueList(n0,n1); }
}

XMLSequenceValue XMLSequenceValue() :
{
   XMLComponentValueList n0;

   
}
{
   n0=XMLComponentValueList()
   
   { return new XMLSequenceValue(n0); }
}

XMLComponentValueList XMLComponentValueList() :
{
   NodeList n0 = new NodeList();
   XMLNamedValue n1;

   
}
{
   (
      n1=XMLNamedValue()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new XMLComponentValueList(n0); }
}

SequenceOfType SequenceOfType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   TypeOrNamedType n4;

   
}
{
   n1=<SEQUENCE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<OF_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=TypeOrNamedType()
   
   { return new SequenceOfType(n0,n2,n4); }
}

SequenceOfValue SequenceOfValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   ValueList n4;
   NodeToken n5;
   Token n6;
   NodeSequence n7;
   NodeToken n8;
   Token n9;
   NamedValueList n10;
   NodeToken n11;
   Token n12;
   NodeSequence n13;
   NodeToken n14;
   Token n15;
   NodeToken n16;
   Token n17;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n4=ValueList()
      { n1.addNode(n4); }
      n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n1.addNode(n5); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n7 = new NodeSequence(3); }
      n9=<LEFT_BRACE_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n7.addNode(n8); }
      n10=NamedValueList()
      { n7.addNode(n10); }
      n12=<RIGHT_BRACE_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n7.addNode(n11); }
      { n0 = new NodeChoice(n7, 1); }
   |
      { n13 = new NodeSequence(2); }
      n15=<LEFT_BRACE_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n13.addNode(n14); }
      n17=<RIGHT_BRACE_TKN> { n16 = JTBToolkit.makeNodeToken(n17); }
      { n13.addNode(n16); }
      { n0 = new NodeChoice(n13, 2); }
   )
   
   { return new SequenceOfValue(n0); }
}

ValueList ValueList() :
{
   Value n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   Value n5;

   
}
{
   n0=Value()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=Value()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ValueList(n0,n1); }
}

XMLSequenceOfValue XMLSequenceOfValue() :
{
   NodeChoice n0;
   XMLValueList n1;
   XMLDelimitedItemList n2;
   XMLSpaceSeparatedList n3;

   
}
{
   (
      n1=XMLValueList()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLDelimitedItemList()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=XMLSpaceSeparatedList()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new XMLSequenceOfValue(n0); }
}

XMLValueList XMLValueList() :
{
   NodeList n0 = new NodeList();
   XMLValueOrEmpty n1;

   
}
{
   (
      n1=XMLValueOrEmpty()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new XMLValueList(n0); }
}

XMLValueOrEmpty XMLValueOrEmpty() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NonParameterizedTypeName n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<LESSER_THAN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<AMPERSAND_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=NonParameterizedTypeName()
   n6=<XMLTAGTERMINATINGBRACKET_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new XMLValueOrEmpty(n0,n2,n4,n5); }
}

XMLSpaceSeparatedList XMLSpaceSeparatedList() :
{
   NodeList n0 = new NodeList();
   XMLValueOrEmpty n1;

   
}
{
   (
      n1=XMLValueOrEmpty()
      { n0.addNode(n1); }
   )+
   { n0.nodes.trimToSize(); }
   
   { return new XMLSpaceSeparatedList(n0); }
}

XMLDelimitedItemList XMLDelimitedItemList() :
{
   NodeChoice n0;
   XMLDelimitedItem n1;
   NodeSequence n2;
   XMLDelimitedItem n3;
   XMLDelimitedItemList n4;

   
}
{
   (
      n1=XMLDelimitedItem()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(2); }
      n3=XMLDelimitedItem()
      { n2.addNode(n3); }
      n4=XMLDelimitedItemList()
      { n2.addNode(n4); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLDelimitedItemList(n0); }
}

XMLDelimitedItem XMLDelimitedItem() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NonParameterizedTypeName n6;
   NodeToken n7;
   Token n8;
   XMLValue n9;
   NodeToken n10;
   Token n11;
   NodeToken n12;
   Token n13;
   NonParameterizedTypeName n14;
   NodeToken n15;
   Token n16;
   NodeSequence n17;
   NodeToken n18;
   Token n19;
   NodeToken n20;
   Token n21;
   NodeToken n22;
   Token n23;
   NodeToken n24;
   Token n25;
   XMLValue n26;
   NodeToken n27;
   Token n28;
   NodeToken n29;
   Token n30;
   NodeToken n31;
   Token n32;
   NodeToken n33;
   Token n34;

   
}
{
   (
      { n1 = new NodeSequence(9); }
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n6=NonParameterizedTypeName()
      { n1.addNode(n6); }
      n8=<GREATER_THAN_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n1.addNode(n7); }
      n9=XMLValue()
      { n1.addNode(n9); }
      n11=<XMLENDTAGBRACKET_TKN> { n10 = JTBToolkit.makeNodeToken(n11); }
      { n1.addNode(n10); }
      n13=<AMPERSAND_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n1.addNode(n12); }
      n14=NonParameterizedTypeName()
      { n1.addNode(n14); }
      n16=<GREATER_THAN_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n1.addNode(n15); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n17 = new NodeSequence(9); }
      n19=<LESSER_THAN_TKN> { n18 = JTBToolkit.makeNodeToken(n19); }
      { n17.addNode(n18); }
      n21=<AMPERSAND_TKN> { n20 = JTBToolkit.makeNodeToken(n21); }
      { n17.addNode(n20); }
      n23=<IDENTIFIER> { n22 = JTBToolkit.makeNodeToken(n23); }
      { n17.addNode(n22); }
      n25=<GREATER_THAN_TKN> { n24 = JTBToolkit.makeNodeToken(n25); }
      { n17.addNode(n24); }
      n26=XMLValue()
      { n17.addNode(n26); }
      n28=<XMLENDTAGBRACKET_TKN> { n27 = JTBToolkit.makeNodeToken(n28); }
      { n17.addNode(n27); }
      n30=<AMPERSAND_TKN> { n29 = JTBToolkit.makeNodeToken(n30); }
      { n17.addNode(n29); }
      n32=<IDENTIFIER> { n31 = JTBToolkit.makeNodeToken(n32); }
      { n17.addNode(n31); }
      n34=<GREATER_THAN_TKN> { n33 = JTBToolkit.makeNodeToken(n34); }
      { n17.addNode(n33); }
      { n0 = new NodeChoice(n17, 1); }
   )
   
   { return new XMLDelimitedItem(n0); }
}

SetType SetType() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeSequence n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;
   ExtensionAndException n13;
   NodeOptional n14 = new NodeOptional();
   OptionalExtensionMarker n15;
   NodeToken n16;
   Token n17;
   NodeSequence n18;
   NodeToken n19;
   Token n20;
   NodeToken n21;
   Token n22;
   ComponentTypeLists n23;
   NodeToken n24;
   Token n25;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<SET_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n5=<LEFT_BRACE_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n1.addNode(n4); }
      n7=<RIGHT_BRACE_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n1.addNode(n6); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n8 = new NodeSequence(5); }
      n10=<SET_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n8.addNode(n9); }
      n12=<LEFT_BRACE_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n8.addNode(n11); }
      n13=ExtensionAndException()
      { n8.addNode(n13); }
      (
         n15=OptionalExtensionMarker()
         { n14.addNode(n15); }
      )?
      { n8.addNode(n14); }
      n17=<RIGHT_BRACE_TKN> { n16 = JTBToolkit.makeNodeToken(n17); }
      { n8.addNode(n16); }
      { n0 = new NodeChoice(n8, 1); }
   |
      { n18 = new NodeSequence(4); }
      n20=<SET_TKN> { n19 = JTBToolkit.makeNodeToken(n20); }
      { n18.addNode(n19); }
      n22=<LEFT_BRACE_TKN> { n21 = JTBToolkit.makeNodeToken(n22); }
      { n18.addNode(n21); }
      n23=ComponentTypeLists()
      { n18.addNode(n23); }
      n25=<RIGHT_BRACE_TKN> { n24 = JTBToolkit.makeNodeToken(n25); }
      { n18.addNode(n24); }
      { n0 = new NodeChoice(n18, 2); }
   )
   
   { return new SetType(n0); }
}

SetValue SetValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   ComponentValueList n4;
   NodeToken n5;
   Token n6;
   NodeSequence n7;
   NodeToken n8;
   Token n9;
   NodeToken n10;
   Token n11;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n4=ComponentValueList()
      { n1.addNode(n4); }
      n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n1.addNode(n5); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n7 = new NodeSequence(2); }
      n9=<LEFT_BRACE_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n7.addNode(n8); }
      n11=<RIGHT_BRACE_TKN> { n10 = JTBToolkit.makeNodeToken(n11); }
      { n7.addNode(n10); }
      { n0 = new NodeChoice(n7, 1); }
   )
   
   { return new SetValue(n0); }
}

XMLSetValue XMLSetValue() :
{
   XMLComponentValueList n0;

   
}
{
   n0=XMLComponentValueList()
   
   { return new XMLSetValue(n0); }
}

SetOfType SetOfType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   TypeOrNamedType n4;

   
}
{
   n1=<SET_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<OF_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=TypeOrNamedType()
   
   { return new SetOfType(n0,n2,n4); }
}

SetOfValue SetOfValue() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   ValueList n4;
   NodeToken n5;
   Token n6;
   NodeSequence n7;
   NodeToken n8;
   Token n9;
   NamedValueList n10;
   NodeToken n11;
   Token n12;
   NodeSequence n13;
   NodeToken n14;
   Token n15;
   NodeToken n16;
   Token n17;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n4=ValueList()
      { n1.addNode(n4); }
      n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n1.addNode(n5); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n7 = new NodeSequence(3); }
      n9=<LEFT_BRACE_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n7.addNode(n8); }
      n10=NamedValueList()
      { n7.addNode(n10); }
      n12=<RIGHT_BRACE_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n7.addNode(n11); }
      { n0 = new NodeChoice(n7, 1); }
   |
      { n13 = new NodeSequence(2); }
      n15=<LEFT_BRACE_TKN> { n14 = JTBToolkit.makeNodeToken(n15); }
      { n13.addNode(n14); }
      n17=<RIGHT_BRACE_TKN> { n16 = JTBToolkit.makeNodeToken(n17); }
      { n13.addNode(n16); }
      { n0 = new NodeChoice(n13, 2); }
   )
   
   { return new SetOfValue(n0); }
}

XMLSetOfValue XMLSetOfValue() :
{
   NodeChoice n0;
   XMLValueList n1;
   XMLDelimitedItemList n2;
   XMLSpaceSeparatedList n3;

   
}
{
   (
      n1=XMLValueList()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLDelimitedItemList()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=XMLSpaceSeparatedList()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new XMLSetOfValue(n0); }
}

ChoiceType ChoiceType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   AlternativeTypeLists n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<CHOICE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<LEFT_BRACE_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=AlternativeTypeLists()
   n6=<RIGHT_BRACE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new ChoiceType(n0,n2,n4,n5); }
}

AlternativeTypeLists AlternativeTypeLists() :
{
   RootAlternativeTypeList n0;
   NodeOptional n1 = new NodeOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   ExtensionAndException n5;
   NodeOptional n6;
   ExtensionAdditionAlternatives n7;
   NodeOptional n8;
   OptionalExtensionMarker n9;

   
}
{
   n0=RootAlternativeTypeList()
   (
      { n6 = new NodeOptional(); }
      { n8 = new NodeOptional(); }
      { n2 = new NodeSequence(4); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=ExtensionAndException()
      { n2.addNode(n5); }
      (
         n7=ExtensionAdditionAlternatives()
         { n6.addNode(n7); }
      )?
      { n2.addNode(n6); }
      (
         n9=OptionalExtensionMarker()
         { n8.addNode(n9); }
      )?
      { n2.addNode(n8); }
      { n1.addNode(n2); }
   )?
   
   { return new AlternativeTypeLists(n0,n1); }
}

RootAlternativeTypeList RootAlternativeTypeList() :
{
   AlternativeTypeList n0;

   
}
{
   n0=AlternativeTypeList()
   
   { return new RootAlternativeTypeList(n0); }
}

ExtensionAdditionAlternatives ExtensionAdditionAlternatives() :
{
   NodeToken n0;
   Token n1;
   ExtensionAdditionAlternativesList n2;

   
}
{
   n1=<COMMA_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ExtensionAdditionAlternativesList()
   
   { return new ExtensionAdditionAlternatives(n0,n2); }
}

ExtensionAdditionAlternativesList ExtensionAdditionAlternativesList() :
{
   ExtensionAdditionAlternative n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   ExtensionAdditionAlternative n5;

   
}
{
   n0=ExtensionAdditionAlternative()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=ExtensionAdditionAlternative()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new ExtensionAdditionAlternativesList(n0,n1); }
}

ExtensionAdditionAlternative ExtensionAdditionAlternative() :
{
   NodeChoice n0;
   ExtensionAdditionAlternativesGroup n1;
   NamedType n2;

   
}
{
   (
      n1=ExtensionAdditionAlternativesGroup()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=NamedType()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new ExtensionAdditionAlternative(n0); }
}

ExtensionAdditionAlternativesGroup ExtensionAdditionAlternativesGroup() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   VersionNumber n3;
   AlternativeTypeList n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<VERSIONBRACKET_START_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=VersionNumber()
      { n2.addNode(n3); }
   )?
   n4=AlternativeTypeList()
   n6=<VERSIONBRACKET_END_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new ExtensionAdditionAlternativesGroup(n0,n2,n4,n5); }
}

AlternativeTypeList AlternativeTypeList() :
{
   NamedType n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedType n5;

   
}
{
   n0=NamedType()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedType()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new AlternativeTypeList(n0,n1); }
}

ChoiceValue ChoiceValue() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   Value n4;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<COLON_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=Value()
   
   { return new ChoiceValue(n0,n2,n4); }
}

XMLChoiceValue XMLChoiceValue() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   XMLValue n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   NodeToken n15;
   Token n16;

   
}
{
   n1=<LESSER_THAN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<AMPERSAND_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n5=<IDENTIFIER> { n4 = JTBToolkit.makeNodeToken(n5); }
   n7=<GREATER_THAN_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   n8=XMLValue()
   n10=<XMLENDTAGBRACKET_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
   n12=<AMPERSAND_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
   n14=<IDENTIFIER> { n13 = JTBToolkit.makeNodeToken(n14); }
   n16=<GREATER_THAN_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
   
   { return new XMLChoiceValue(n0,n2,n4,n6,n8,n9,n11,n13,n15); }
}

SelectionType SelectionType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   Type n4;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=Type()
   
   { return new SelectionType(n0,n2,n4); }
}

TaggedType TaggedType() :
{
   NodeChoice n0;
   NodeSequence n1;
   Tag n2;
   NodeToken n3;
   Token n4;
   Type n5;
   NodeSequence n6;
   Tag n7;
   NodeToken n8;
   Token n9;
   Type n10;
   NodeSequence n11;
   Tag n12;
   Type n13;

   
}
{
   (
      { n1 = new NodeSequence(3); }
      n2=Tag()
      { n1.addNode(n2); }
      n4=<IMPLICIT_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n1.addNode(n3); }
      n5=Type()
      { n1.addNode(n5); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n6 = new NodeSequence(3); }
      n7=Tag()
      { n6.addNode(n7); }
      n9=<EXPLICIT_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n6.addNode(n8); }
      n10=Type()
      { n6.addNode(n10); }
      { n0 = new NodeChoice(n6, 1); }
   |
      { n11 = new NodeSequence(2); }
      n12=Tag()
      { n11.addNode(n12); }
      n13=Type()
      { n11.addNode(n13); }
      { n0 = new NodeChoice(n11, 2); }
   )
   
   { return new TaggedType(n0); }
}

Tag Tag() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   TagClass n3;
   ClassNumber n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<LEFT_BRACKET_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=TagClass()
      { n2.addNode(n3); }
   )?
   n4=ClassNumber()
   n6=<RIGHT_BRACKET_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new Tag(n0,n2,n4,n5); }
}

ClassNumber ClassNumber() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   DefinedValue n3;

   
}
{
   (
      n2=<NUMBER> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=DefinedValue()
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new ClassNumber(n0); }
}

TagClass TagClass() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;

   
}
{
   (
      n2=<UNIVERSAL_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<APPLICATION_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n6=<PRIVATE_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n0 = new NodeChoice(n5, 2); }
   )
   
   { return new TagClass(n0); }
}

EmbeddedPDVType EmbeddedPDVType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<EMBEDDED_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<PDV_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new EmbeddedPDVType(n0,n2); }
}

EmbeddedPDVValue EmbeddedPDVValue() :
{
   SequenceValue n0;

   
}
{
   n0=SequenceValue()
   
   { return new EmbeddedPDVValue(n0); }
}

XMLEmbeddedPDVValue XMLEmbeddedPDVValue() :
{
   NodeOptional n0 = new NodeOptional();
   XMLSequenceValue n1;

   
}
{
   (
      n1=XMLSequenceValue()
      { n0.addNode(n1); }
   )?
   
   { return new XMLEmbeddedPDVValue(n0); }
}

ExternalType ExternalType() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<EXTERNAL_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new ExternalType(n0); }
}

ExternalValue ExternalValue() :
{
   SequenceValue n0;

   
}
{
   n0=SequenceValue()
   
   { return new ExternalValue(n0); }
}

XMLExternalValue XMLExternalValue() :
{
   NodeOptional n0 = new NodeOptional();
   XMLSequenceValue n1;

   
}
{
   (
      n1=XMLSequenceValue()
      { n0.addNode(n1); }
   )?
   
   { return new XMLExternalValue(n0); }
}

ObjectIdentifierType ObjectIdentifierType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<OBJECT_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<IDENTIFIER_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new ObjectIdentifierType(n0,n2); }
}

ObjectIdentifierValue ObjectIdentifierValue() :
{
   NodeToken n0;
   Token n1;
   ObjIdComponentsList n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ObjIdComponentsList()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new ObjectIdentifierValue(n0,n2,n3); }
}

ObjIdComponentsList ObjIdComponentsList() :
{
   NodeListOptional n0 = new NodeListOptional();
   ObjIdComponents n1;

   
}
{
   (
      n1=ObjIdComponents()
      { n0.addNode(n1); }
   )*
   { n0.nodes.trimToSize(); }
   
   { return new ObjIdComponentsList(n0); }
}

ObjIdComponents ObjIdComponents() :
{
   NodeChoice n0;
   NameAndNumberForm n1;
   NameForm n2;
   NumberForm n3;

   
}
{
   (
      n1=NameAndNumberForm()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=NameForm()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=NumberForm()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new ObjIdComponents(n0); }
}

NameForm NameForm() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new NameForm(n0); }
}

NumberForm NumberForm() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   DefinedValue n3;

   
}
{
   (
      n2=<NUMBER> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=DefinedValue()
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new NumberForm(n0); }
}

NameAndNumberForm NameAndNumberForm() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NumberForm n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<LEFT_PARENTHESIS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n4=NumberForm()
   n6=<RIGHT_PARENTHESIS_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new NameAndNumberForm(n0,n2,n4,n5); }
}

XMLObjectIdentifierValue XMLObjectIdentifierValue() :
{
   XMLObjIdComponentList n0;

   
}
{
   n0=XMLObjIdComponentList()
   
   { return new XMLObjectIdentifierValue(n0); }
}

XMLObjIdComponentList XMLObjIdComponentList() :
{
   NodeChoice n0;
   XMLObjIdComponent n1;
   NodeSequence n2;
   XMLObjIdComponent n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;
   XMLObjIdComponentList n10;

   
}
{
   (
      n1=XMLObjIdComponent()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(5); }
      n3=XMLObjIdComponent()
      { n2.addNode(n3); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n2.addNode(n4); }
      n7=<DOT_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n2.addNode(n6); }
      n9=<AMPERSAND_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n2.addNode(n8); }
      n10=XMLObjIdComponentList()
      { n2.addNode(n10); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLObjIdComponentList(n0); }
}

XMLObjIdComponent XMLObjIdComponent() :
{
   NodeChoice n0;
   NameForm n1;
   XMLNumberForm n2;
   XMLNameAndNumberForm n3;

   
}
{
   (
      n1=NameForm()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLNumberForm()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=XMLNameAndNumberForm()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new XMLObjIdComponent(n0); }
}

XMLNumberForm XMLNumberForm() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new XMLNumberForm(n0); }
}

XMLNameAndNumberForm XMLNameAndNumberForm() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   XMLNumberForm n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<AMPERSAND_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n5=<LEFT_PARENTHESIS_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
   n7=<AMPERSAND_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   n8=XMLNumberForm()
   n10=<AMPERSAND_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
   n12=<RIGHT_PARENTHESIS_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
   
   { return new XMLNameAndNumberForm(n0,n2,n4,n6,n8,n9,n11); }
}

RelativeOIDType RelativeOIDType() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<RELATIVE_OID_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new RelativeOIDType(n0); }
}

RelativeOIDValue RelativeOIDValue() :
{
   NodeToken n0;
   Token n1;
   RelativeOIDComponentsList n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=RelativeOIDComponentsList()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new RelativeOIDValue(n0,n2,n3); }
}

RelativeOIDComponentsList RelativeOIDComponentsList() :
{
   NodeChoice n0;
   RelativeOIDComponents n1;
   NodeSequence n2;
   RelativeOIDComponents n3;
   RelativeOIDComponentsList n4;

   
}
{
   (
      n1=RelativeOIDComponents()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(2); }
      n3=RelativeOIDComponents()
      { n2.addNode(n3); }
      n4=RelativeOIDComponentsList()
      { n2.addNode(n4); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new RelativeOIDComponentsList(n0); }
}

RelativeOIDComponents RelativeOIDComponents() :
{
   NodeChoice n0;
   NumberForm n1;
   NameAndNumberForm n2;
   DefinedValue n3;

   
}
{
   (
      n1=NumberForm()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=NameAndNumberForm()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=DefinedValue()
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new RelativeOIDComponents(n0); }
}

XMLRelativeOIDValue XMLRelativeOIDValue() :
{
   XMLRelativeOIDComponentList n0;

   
}
{
   n0=XMLRelativeOIDComponentList()
   
   { return new XMLRelativeOIDValue(n0); }
}

XMLRelativeOIDComponentList XMLRelativeOIDComponentList() :
{
   NodeChoice n0;
   XMLRelativeOIDComponent n1;
   NodeSequence n2;
   XMLRelativeOIDComponent n3;
   NodeToken n4;
   Token n5;
   NodeToken n6;
   Token n7;
   NodeToken n8;
   Token n9;
   XMLRelativeOIDComponentList n10;

   
}
{
   (
      n1=XMLRelativeOIDComponent()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(5); }
      n3=XMLRelativeOIDComponent()
      { n2.addNode(n3); }
      n5=<AMPERSAND_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
      { n2.addNode(n4); }
      n7=<DOT_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n2.addNode(n6); }
      n9=<AMPERSAND_TKN> { n8 = JTBToolkit.makeNodeToken(n9); }
      { n2.addNode(n8); }
      n10=XMLRelativeOIDComponentList()
      { n2.addNode(n10); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLRelativeOIDComponentList(n0); }
}

XMLRelativeOIDComponent XMLRelativeOIDComponent() :
{
   NodeChoice n0;
   XMLNumberForm n1;
   XMLNameAndNumberForm n2;

   
}
{
   (
      n1=XMLNumberForm()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLNameAndNumberForm()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLRelativeOIDComponent(n0); }
}

CharacterStringType CharacterStringType() :
{
   NodeChoice n0;
   RestrictedCharacterStringType n1;
   UnrestrictedCharacterStringType n2;

   
}
{
   (
      n1=RestrictedCharacterStringType()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=UnrestrictedCharacterStringType()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new CharacterStringType(n0); }
}

RestrictedCharacterStringType RestrictedCharacterStringType() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;
   NodeToken n7;
   Token n8;
   NodeToken n9;
   Token n10;
   NodeToken n11;
   Token n12;
   NodeToken n13;
   Token n14;
   NodeToken n15;
   Token n16;
   NodeToken n17;
   Token n18;
   NodeToken n19;
   Token n20;
   NodeToken n21;
   Token n22;
   NodeToken n23;
   Token n24;
   NodeToken n25;
   Token n26;

   
}
{
   (
      n2=<BMPSTRING_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<GENERALSTRING_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n6=<GRAPHICSTRING_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n0 = new NodeChoice(n5, 2); }
   |
      n8=<IA5STRING_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
      { n0 = new NodeChoice(n7, 3); }
   |
      n10=<ISO646STRING_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n0 = new NodeChoice(n9, 4); }
   |
      n12=<NUMERICSTRING_TKN> { n11 = JTBToolkit.makeNodeToken(n12); }
      { n0 = new NodeChoice(n11, 5); }
   |
      n14=<PRINTABLESTRING_TKN> { n13 = JTBToolkit.makeNodeToken(n14); }
      { n0 = new NodeChoice(n13, 6); }
   |
      n16=<TELETEXSTRING_TKN> { n15 = JTBToolkit.makeNodeToken(n16); }
      { n0 = new NodeChoice(n15, 7); }
   |
      n18=<T61STRING_TKN> { n17 = JTBToolkit.makeNodeToken(n18); }
      { n0 = new NodeChoice(n17, 8); }
   |
      n20=<UNIVERSALSTRING_TKN> { n19 = JTBToolkit.makeNodeToken(n20); }
      { n0 = new NodeChoice(n19, 9); }
   |
      n22=<UTF8STRING_TKN> { n21 = JTBToolkit.makeNodeToken(n22); }
      { n0 = new NodeChoice(n21, 10); }
   |
      n24=<VIDEOTEXSTRING_TKN> { n23 = JTBToolkit.makeNodeToken(n24); }
      { n0 = new NodeChoice(n23, 11); }
   |
      n26=<VISIBLESTRING_TKN> { n25 = JTBToolkit.makeNodeToken(n26); }
      { n0 = new NodeChoice(n25, 12); }
   )
   
   { return new RestrictedCharacterStringType(n0); }
}

RestrictedCharacterStringValue RestrictedCharacterStringValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   CharacterStringList n3;
   Quadruple n4;
   Tuple n5;

   
}
{
   (
      n2=<CSTRING> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=CharacterStringList()
      { n0 = new NodeChoice(n3, 1); }
   |
      n4=Quadruple()
      { n0 = new NodeChoice(n4, 2); }
   |
      n5=Tuple()
      { n0 = new NodeChoice(n5, 3); }
   )
   
   { return new RestrictedCharacterStringValue(n0); }
}

CharacterStringList CharacterStringList() :
{
   NodeToken n0;
   Token n1;
   CharSyms n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=CharSyms()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new CharacterStringList(n0,n2,n3); }
}

CharSyms CharSyms() :
{
   CharsDefn n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   CharsDefn n5;

   
}
{
   n0=CharsDefn()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=CharsDefn()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new CharSyms(n0,n1); }
}

CharsDefn CharsDefn() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   Quadruple n3;
   Tuple n4;
   DefinedValue n5;

   
}
{
   (
      n2=<CSTRING> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=Quadruple()
      { n0 = new NodeChoice(n3, 1); }
   |
      n4=Tuple()
      { n0 = new NodeChoice(n4, 2); }
   |
      n5=DefinedValue()
      { n0 = new NodeChoice(n5, 3); }
   )
   
   { return new CharsDefn(n0); }
}

Quadruple Quadruple() :
{
   NodeToken n0;
   Token n1;
   Group n2;
   NodeToken n3;
   Token n4;
   Plane n5;
   NodeToken n6;
   Token n7;
   Row n8;
   NodeToken n9;
   Token n10;
   Cell n11;
   NodeToken n12;
   Token n13;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Group()
   n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   n5=Plane()
   n7=<COMMA_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   n8=Row()
   n10=<COMMA_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
   n11=Cell()
   n13=<RIGHT_BRACE_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
   
   { return new Quadruple(n0,n2,n3,n5,n6,n8,n9,n11,n12); }
}

Group Group() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new Group(n0); }
}

Plane Plane() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new Plane(n0); }
}

Row Row() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new Row(n0); }
}

Cell Cell() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new Cell(n0); }
}

Tuple Tuple() :
{
   NodeToken n0;
   Token n1;
   TableColumn n2;
   NodeToken n3;
   Token n4;
   TableRow n5;
   NodeToken n6;
   Token n7;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=TableColumn()
   n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   n5=TableRow()
   n7=<RIGHT_BRACE_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
   
   { return new Tuple(n0,n2,n3,n5,n6); }
}

TableColumn TableColumn() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new TableColumn(n0); }
}

TableRow TableRow() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new TableRow(n0); }
}

XMLRestrictedCharacterStringValue XMLRestrictedCharacterStringValue() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<CSTRING> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new XMLRestrictedCharacterStringValue(n0); }
}

UnrestrictedCharacterStringType UnrestrictedCharacterStringType() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;

   
}
{
   n1=<CHARACTER_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<STRING_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   
   { return new UnrestrictedCharacterStringType(n0,n2); }
}

CharacterStringValue CharacterStringValue() :
{
   RestrictedCharacterStringValue n0;

   
}
{
   n0=RestrictedCharacterStringValue()
   
   { return new CharacterStringValue(n0); }
}

XMLCharacterStringValue XMLCharacterStringValue() :
{
   NodeChoice n0;
   XMLRestrictedCharacterStringValue n1;
   XMLUnrestrictedCharacterStringValue n2;

   
}
{
   (
      n1=XMLRestrictedCharacterStringValue()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=XMLUnrestrictedCharacterStringValue()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new XMLCharacterStringValue(n0); }
}

UnrestrictedCharacterStringValue UnrestrictedCharacterStringValue() :
{
   SequenceValue n0;

   
}
{
   n0=SequenceValue()
   
   { return new UnrestrictedCharacterStringValue(n0); }
}

XMLUnrestrictedCharacterStringValue XMLUnrestrictedCharacterStringValue() :
{
   NodeOptional n0 = new NodeOptional();
   XMLSequenceValue n1;

   
}
{
   (
      n1=XMLSequenceValue()
      { n0.addNode(n1); }
   )?
   
   { return new XMLUnrestrictedCharacterStringValue(n0); }
}

UsefulType UsefulType() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;

   
}
{
   (
      n2=<GENERALIZEDTIME_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<UTCTIME_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n6=<OBJECTDESCRIPTOR_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n0 = new NodeChoice(n5, 2); }
   )
   
   { return new UsefulType(n0); }
}

TypeWithConstraint TypeWithConstraint() :
{
   NodeChoice n0;
   NodeSequence n1;
   NodeToken n2;
   Token n3;
   Constraint n4;
   NodeToken n5;
   Token n6;
   TypeOrNamedType n7;
   NodeSequence n8;
   NodeToken n9;
   Token n10;
   SizeConstraint n11;
   NodeToken n12;
   Token n13;
   TypeOrNamedType n14;
   NodeSequence n15;
   NodeToken n16;
   Token n17;
   Constraint n18;
   NodeToken n19;
   Token n20;
   TypeOrNamedType n21;
   NodeSequence n22;
   NodeToken n23;
   Token n24;
   SizeConstraint n25;
   NodeToken n26;
   Token n27;
   TypeOrNamedType n28;

   
}
{
   (
      { n1 = new NodeSequence(4); }
      n3=<SET_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
      n4=Constraint()
      { n1.addNode(n4); }
      n6=<OF_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n1.addNode(n5); }
      n7=TypeOrNamedType()
      { n1.addNode(n7); }
      { n0 = new NodeChoice(n1, 0); }
   |
      { n8 = new NodeSequence(4); }
      n10=<SET_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
      { n8.addNode(n9); }
      n11=SizeConstraint()
      { n8.addNode(n11); }
      n13=<OF_TKN> { n12 = JTBToolkit.makeNodeToken(n13); }
      { n8.addNode(n12); }
      n14=TypeOrNamedType()
      { n8.addNode(n14); }
      { n0 = new NodeChoice(n8, 1); }
   |
      { n15 = new NodeSequence(4); }
      n17=<SEQUENCE_TKN> { n16 = JTBToolkit.makeNodeToken(n17); }
      { n15.addNode(n16); }
      n18=Constraint()
      { n15.addNode(n18); }
      n20=<OF_TKN> { n19 = JTBToolkit.makeNodeToken(n20); }
      { n15.addNode(n19); }
      n21=TypeOrNamedType()
      { n15.addNode(n21); }
      { n0 = new NodeChoice(n15, 2); }
   |
      { n22 = new NodeSequence(4); }
      n24=<SEQUENCE_TKN> { n23 = JTBToolkit.makeNodeToken(n24); }
      { n22.addNode(n23); }
      n25=SizeConstraint()
      { n22.addNode(n25); }
      n27=<OF_TKN> { n26 = JTBToolkit.makeNodeToken(n27); }
      { n22.addNode(n26); }
      n28=TypeOrNamedType()
      { n22.addNode(n28); }
      { n0 = new NodeChoice(n22, 3); }
   )
   
   { return new TypeWithConstraint(n0); }
}

TypeOrNamedType TypeOrNamedType() :
{
   NodeChoice n0;
   Type n1;
   NamedType n2;

   
}
{
   (
      n1=Type()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=NamedType()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new TypeOrNamedType(n0); }
}

Constraint Constraint() :
{
   NodeToken n0;
   Token n1;
   ConstraintSpec n2;
   NodeOptional n3 = new NodeOptional();
   ExceptionSpec n4;
   NodeToken n5;
   Token n6;

   
}
{
   n1=<LEFT_PARENTHESIS_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ConstraintSpec()
   (
      n4=ExceptionSpec()
      { n3.addNode(n4); }
   )?
   n6=<RIGHT_PARENTHESIS_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
   
   { return new Constraint(n0,n2,n3,n5); }
}

ConstraintSpec ConstraintSpec() :
{
   SubtypeConstraint n0;

   
}
{
   n0=SubtypeConstraint()
   
   { return new ConstraintSpec(n0); }
}

ExceptionSpec ExceptionSpec() :
{
   NodeToken n0;
   Token n1;
   ExceptionIdentification n2;

   
}
{
   n1=<EXCLAMATION_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ExceptionIdentification()
   
   { return new ExceptionSpec(n0,n2); }
}

ExceptionIdentification ExceptionIdentification() :
{
   NodeChoice n0;
   SignedNumber n1;
   DefinedValue n2;
   NodeSequence n3;
   Type n4;
   NodeToken n5;
   Token n6;
   Value n7;

   
}
{
   (
      n1=SignedNumber()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=DefinedValue()
      { n0 = new NodeChoice(n2, 1); }
   |
      { n3 = new NodeSequence(3); }
      n4=Type()
      { n3.addNode(n4); }
      n6=<COLON_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n3.addNode(n5); }
      n7=Value()
      { n3.addNode(n7); }
      { n0 = new NodeChoice(n3, 2); }
   )
   
   { return new ExceptionIdentification(n0); }
}

SubtypeConstraint SubtypeConstraint() :
{
   ElementSetSpecs n0;

   
}
{
   n0=ElementSetSpecs()
   
   { return new SubtypeConstraint(n0); }
}

ElementSetSpecs ElementSetSpecs() :
{
   RootElementSetSpec n0;
   NodeOptional n1 = new NodeOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;
   NodeOptional n7;
   NodeSequence n8;
   NodeToken n9;
   Token n10;
   AdditionalElementSetSpec n11;

   
}
{
   n0=RootElementSetSpec()
   (
      { n7 = new NodeOptional(); }
      { n2 = new NodeSequence(3); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n6=<ELLIPSIS_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n2.addNode(n5); }
      (
         { n8 = new NodeSequence(2); }
         n10=<COMMA_TKN> { n9 = JTBToolkit.makeNodeToken(n10); }
         { n8.addNode(n9); }
         n11=AdditionalElementSetSpec()
         { n8.addNode(n11); }
         { n7.addNode(n8); }
      )?
      { n2.addNode(n7); }
      { n1.addNode(n2); }
   )?
   
   { return new ElementSetSpecs(n0,n1); }
}

RootElementSetSpec RootElementSetSpec() :
{
   ElementSetSpec n0;

   
}
{
   n0=ElementSetSpec()
   
   { return new RootElementSetSpec(n0); }
}

AdditionalElementSetSpec AdditionalElementSetSpec() :
{
   ElementSetSpec n0;

   
}
{
   n0=ElementSetSpec()
   
   { return new AdditionalElementSetSpec(n0); }
}

ElementSetSpec ElementSetSpec() :
{
   NodeChoice n0;
   Unions n1;
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   Exclusions n5;

   
}
{
   (
      n1=Unions()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(2); }
      n4=<ALL_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=Exclusions()
      { n2.addNode(n5); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new ElementSetSpec(n0); }
}

Unions Unions() :
{
   Intersections n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   UnionMark n3;
   Intersections n4;

   
}
{
   n0=Intersections()
   (
      { n2 = new NodeSequence(2); }
      n3=UnionMark()
      { n2.addNode(n3); }
      n4=Intersections()
      { n2.addNode(n4); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new Unions(n0,n1); }
}

Intersections Intersections() :
{
   IntersectionElements n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   IntersectionMark n3;
   IntersectionElements n4;

   
}
{
   n0=IntersectionElements()
   (
      { n2 = new NodeSequence(2); }
      n3=IntersectionMark()
      { n2.addNode(n3); }
      n4=IntersectionElements()
      { n2.addNode(n4); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new Intersections(n0,n1); }
}

IntersectionElements IntersectionElements() :
{
   Elements n0;
   NodeOptional n1 = new NodeOptional();
   Exclusions n2;

   
}
{
   n0=Elements()
   (
      n2=Exclusions()
      { n1.addNode(n2); }
   )?
   
   { return new IntersectionElements(n0,n1); }
}

Elems Elems() :
{
   Elements n0;

   
}
{
   n0=Elements()
   
   { return new Elems(n0); }
}

Exclusions Exclusions() :
{
   NodeToken n0;
   Token n1;
   Elements n2;

   
}
{
   n1=<EXCEPT_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Elements()
   
   { return new Exclusions(n0,n2); }
}

UnionMark UnionMark() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   (
      n2=<BAR_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<UNION_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new UnionMark(n0); }
}

IntersectionMark IntersectionMark() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;

   
}
{
   (
      n2=<CIRCUMFLEX_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<INTERSECTION_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new IntersectionMark(n0); }
}

Elements Elements() :
{
   NodeChoice n0;
   SubtypeElements n1;
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   ElementSetSpec n5;
   NodeToken n6;
   Token n7;

   
}
{
   (
      n1=SubtypeElements()
      { n0 = new NodeChoice(n1, 0); }
   |
      { n2 = new NodeSequence(3); }
      n4=<LEFT_PARENTHESIS_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=ElementSetSpec()
      { n2.addNode(n5); }
      n7=<RIGHT_PARENTHESIS_TKN> { n6 = JTBToolkit.makeNodeToken(n7); }
      { n2.addNode(n6); }
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new Elements(n0); }
}

SubtypeElements SubtypeElements() :
{
   NodeChoice n0;
   ValueRange n1;
   ContainedSubtype n2;
   PermittedAlphabet n3;
   SizeConstraint n4;
   TypeConstraint n5;
   InnerTypeConstraints n6;
   SingleValue n7;
   PatternConstraint n8;

   
}
{
   (
      n1=ValueRange()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=ContainedSubtype()
      { n0 = new NodeChoice(n2, 1); }
   |
      n3=PermittedAlphabet()
      { n0 = new NodeChoice(n3, 2); }
   |
      n4=SizeConstraint()
      { n0 = new NodeChoice(n4, 3); }
   |
      n5=TypeConstraint()
      { n0 = new NodeChoice(n5, 4); }
   |
      n6=InnerTypeConstraints()
      { n0 = new NodeChoice(n6, 5); }
   |
      n7=SingleValue()
      { n0 = new NodeChoice(n7, 6); }
   |
      n8=PatternConstraint()
      { n0 = new NodeChoice(n8, 7); }
   )
   
   { return new SubtypeElements(n0); }
}

PatternConstraint PatternConstraint() :
{
   NodeToken n0;
   Token n1;
   Value n2;

   
}
{
   n1=<PATTERN_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Value()
   
   { return new PatternConstraint(n0,n2); }
}

SingleValue SingleValue() :
{
   Value n0;

   
}
{
   n0=Value()
   
   { return new SingleValue(n0); }
}

ContainedSubtype ContainedSubtype() :
{
   NodeOptional n0 = new NodeOptional();
   Includes n1;
   Type n2;

   
}
{
   (
      n1=Includes()
      { n0.addNode(n1); }
   )?
   n2=Type()
   
   { return new ContainedSubtype(n0,n2); }
}

Includes Includes() :
{
   NodeToken n0;
   Token n1;

   
}
{
   n1=<INCLUDES_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   
   { return new Includes(n0); }
}

ValueRange ValueRange() :
{
   LowerEndpoint n0;
   NodeToken n1;
   Token n2;
   UpperEndpoint n3;

   
}
{
   n0=LowerEndpoint()
   n2=<DOTDOT_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
   n3=UpperEndpoint()
   
   { return new ValueRange(n0,n1,n3); }
}

LowerEndpoint LowerEndpoint() :
{
   LowerEndValue n0;
   NodeOptional n1 = new NodeOptional();
   NodeToken n2;
   Token n3;

   
}
{
   n0=LowerEndValue()
   (
      n3=<LESSER_THAN_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
      { n1.addNode(n2); }
   )?
   
   { return new LowerEndpoint(n0,n1); }
}

UpperEndpoint UpperEndpoint() :
{
   NodeOptional n0 = new NodeOptional();
   NodeToken n1;
   Token n2;
   UpperEndValue n3;

   
}
{
   (
      n2=<LESSER_THAN_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0.addNode(n1); }
   )?
   n3=UpperEndValue()
   
   { return new UpperEndpoint(n0,n3); }
}

LowerEndValue LowerEndValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   Value n3;

   
}
{
   (
      n2=<MIN_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=Value()
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new LowerEndValue(n0); }
}

UpperEndValue UpperEndValue() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   Value n3;

   
}
{
   (
      n2=<MAX_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n3=Value()
      { n0 = new NodeChoice(n3, 1); }
   )
   
   { return new UpperEndValue(n0); }
}

SizeConstraint SizeConstraint() :
{
   NodeToken n0;
   Token n1;
   Constraint n2;

   
}
{
   n1=<SIZE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Constraint()
   
   { return new SizeConstraint(n0,n2); }
}

PermittedAlphabet PermittedAlphabet() :
{
   NodeToken n0;
   Token n1;
   Constraint n2;

   
}
{
   n1=<FROM_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Constraint()
   
   { return new PermittedAlphabet(n0,n2); }
}

TypeConstraint TypeConstraint() :
{
   Type n0;

   
}
{
   n0=Type()
   
   { return new TypeConstraint(n0); }
}

InnerTypeConstraints InnerTypeConstraints() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeChoice n4;
   SingleTypeConstraint n5;
   MultipleTypeConstraints n6;

   
}
{
   n1=<WITH_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<COMPONENT_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   (
      (
         n5=SingleTypeConstraint()
         { n4 = new NodeChoice(n5, 0); }
      |
         n6=MultipleTypeConstraints()
         { n4 = new NodeChoice(n6, 1); }
      )
      
   )
   
   { return new InnerTypeConstraints(n0,n2,n4); }
}

SingleTypeConstraint SingleTypeConstraint() :
{
   Constraint n0;

   
}
{
   n0=Constraint()
   
   { return new SingleTypeConstraint(n0); }
}

MultipleTypeConstraints MultipleTypeConstraints() :
{
   NodeChoice n0;
   FullSpecification n1;
   PartialSpecification n2;

   
}
{
   (
      n1=FullSpecification()
      { n0 = new NodeChoice(n1, 0); }
   |
      n2=PartialSpecification()
      { n0 = new NodeChoice(n2, 1); }
   )
   
   { return new MultipleTypeConstraints(n0); }
}

FullSpecification FullSpecification() :
{
   NodeToken n0;
   Token n1;
   TypeConstraints n2;
   NodeToken n3;
   Token n4;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=TypeConstraints()
   n4=<RIGHT_BRACE_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
   
   { return new FullSpecification(n0,n2,n3); }
}

PartialSpecification PartialSpecification() :
{
   NodeToken n0;
   Token n1;
   NodeToken n2;
   Token n3;
   NodeToken n4;
   Token n5;
   TypeConstraints n6;
   NodeToken n7;
   Token n8;

   
}
{
   n1=<LEFT_BRACE_TKN> { n0 = JTBToolkit.makeNodeToken(n1); }
   n3=<ELLIPSIS_TKN> { n2 = JTBToolkit.makeNodeToken(n3); }
   n5=<COMMA_TKN> { n4 = JTBToolkit.makeNodeToken(n5); }
   n6=TypeConstraints()
   n8=<RIGHT_BRACE_TKN> { n7 = JTBToolkit.makeNodeToken(n8); }
   
   { return new PartialSpecification(n0,n2,n4,n6,n7); }
}

TypeConstraints TypeConstraints() :
{
   NamedConstraint n0;
   NodeListOptional n1 = new NodeListOptional();
   NodeSequence n2;
   NodeToken n3;
   Token n4;
   NamedConstraint n5;

   
}
{
   n0=NamedConstraint()
   (
      { n2 = new NodeSequence(2); }
      n4=<COMMA_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n2.addNode(n3); }
      n5=NamedConstraint()
      { n2.addNode(n5); }
      { n1.addNode(n2); }
   )*
   { n1.nodes.trimToSize(); }
   
   { return new TypeConstraints(n0,n1); }
}

NamedConstraint NamedConstraint() :
{
   NodeToken n0;
   Token n1;
   ComponentConstraint n2;

   
}
{
   n1=<IDENTIFIER> { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=ComponentConstraint()
   
   { return new NamedConstraint(n0,n2); }
}

ComponentConstraint ComponentConstraint() :
{
   NodeOptional n0 = new NodeOptional();
   ValueConstraint n1;
   NodeOptional n2 = new NodeOptional();
   PresenceConstraint n3;

   
}
{
   (
      n1=ValueConstraint()
      { n0.addNode(n1); }
   )?
   (
      n3=PresenceConstraint()
      { n2.addNode(n3); }
   )?
   
   { return new ComponentConstraint(n0,n2); }
}

ValueConstraint ValueConstraint() :
{
   Constraint n0;

   
}
{
   n0=Constraint()
   
   { return new ValueConstraint(n0); }
}

PresenceConstraint PresenceConstraint() :
{
   NodeChoice n0;
   NodeToken n1;
   Token n2;
   NodeToken n3;
   Token n4;
   NodeToken n5;
   Token n6;

   
}
{
   (
      n2=<PRESENT_TKN> { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0); }
   |
      n4=<ABSENT_TKN> { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1); }
   |
      n6=<OPTIONAL_TKN> { n5 = JTBToolkit.makeNodeToken(n6); }
      { n0 = new NodeChoice(n5, 2); }
   )
   
   { return new PresenceConstraint(n0); }
}
