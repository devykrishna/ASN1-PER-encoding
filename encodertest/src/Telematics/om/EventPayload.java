/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class EventPayload extends Object {
	public EventPayload() {
	}

	private Accident accident;

	private Theft theft;

	private DriverStatus driverLogin;

	private DriverStatus driverLogout;

	private AlarmTrigger driverAlarmTrigger;

	private AlarmTrigger passengerAlarmTrigger;

	private IrregularDriving irregularDriving;

	private PassengerOn passengerOn;

	private PassengerOff passengerOff;

	private IrregularHWAccessed irregularHWAccessed;

	private TripStart tripStart;

	private TripEnd tripEnd;

	public Accident getAccident() {
		
		return this.accident;
	}
	
	public Theft getTheft() {
		
		return this.theft;
	}
	
	public DriverStatus getDriverLogin() {
		
		return this.driverLogin;
	}
	
	public DriverStatus getDriverLogout() {
		
		return this.driverLogout;
	}
	
	public AlarmTrigger getDriverAlarmTrigger() {
		
		return this.driverAlarmTrigger;
	}
	
	public AlarmTrigger getPassengerAlarmTrigger() {
		
		return this.passengerAlarmTrigger;
	}
	
	public IrregularDriving getIrregularDriving() {
		
		return this.irregularDriving;
	}
	
	public PassengerOn getPassengerOn() {
		
		return this.passengerOn;
	}
	
	public PassengerOff getPassengerOff() {
		
		return this.passengerOff;
	}
	
	public IrregularHWAccessed getIrregularHWAccessed() {
		
		return this.irregularHWAccessed;
	}
	
	public TripStart getTripStart() {
		
		return this.tripStart;
	}
	
	public TripEnd getTripEnd() {
		
		return this.tripEnd;
	}
	
	public void setAccident(Accident accident) {
		
		this.accident = accident;
	}

	public void setTheft(Theft theft) {
		
		this.theft = theft;
	}

	public void setDriverLogin(DriverStatus driverLogin) {
		
		this.driverLogin = driverLogin;
	}

	public void setDriverLogout(DriverStatus driverLogout) {
		
		this.driverLogout = driverLogout;
	}

	public void setDriverAlarmTrigger(AlarmTrigger driverAlarmTrigger) {
		
		this.driverAlarmTrigger = driverAlarmTrigger;
	}

	public void setPassengerAlarmTrigger(AlarmTrigger passengerAlarmTrigger) {
		
		this.passengerAlarmTrigger = passengerAlarmTrigger;
	}

	public void setIrregularDriving(IrregularDriving irregularDriving) {
		
		this.irregularDriving = irregularDriving;
	}

	public void setPassengerOn(PassengerOn passengerOn) {
		
		this.passengerOn = passengerOn;
	}

	public void setPassengerOff(PassengerOff passengerOff) {
		
		this.passengerOff = passengerOff;
	}

	public void setIrregularHWAccessed(IrregularHWAccessed irregularHWAccessed) {
		
		this.irregularHWAccessed = irregularHWAccessed;
	}

	public void setTripStart(TripStart tripStart) {
		
		this.tripStart = tripStart;
	}

	public void setTripEnd(TripEnd tripEnd) {
		
		this.tripEnd = tripEnd;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		EventPayload comparator = (EventPayload)anObject;

		if ((this.getAccident() != comparator.getAccident()) && ((this.getAccident() == null) || (! this.getAccident().equals(comparator.getAccident())))) return false;
		if ((this.getTheft() != comparator.getTheft()) && ((this.getTheft() == null) || (! this.getTheft().equals(comparator.getTheft())))) return false;
		if ((this.getDriverLogin() != comparator.getDriverLogin()) && ((this.getDriverLogin() == null) || (! this.getDriverLogin().equals(comparator.getDriverLogin())))) return false;
		if ((this.getDriverLogout() != comparator.getDriverLogout()) && ((this.getDriverLogout() == null) || (! this.getDriverLogout().equals(comparator.getDriverLogout())))) return false;
		if ((this.getDriverAlarmTrigger() != comparator.getDriverAlarmTrigger()) && ((this.getDriverAlarmTrigger() == null) || (! this.getDriverAlarmTrigger().equals(comparator.getDriverAlarmTrigger())))) return false;
		if ((this.getPassengerAlarmTrigger() != comparator.getPassengerAlarmTrigger()) && ((this.getPassengerAlarmTrigger() == null) || (! this.getPassengerAlarmTrigger().equals(comparator.getPassengerAlarmTrigger())))) return false;
		if ((this.getIrregularDriving() != comparator.getIrregularDriving()) && ((this.getIrregularDriving() == null) || (! this.getIrregularDriving().equals(comparator.getIrregularDriving())))) return false;
		if ((this.getPassengerOn() != comparator.getPassengerOn()) && ((this.getPassengerOn() == null) || (! this.getPassengerOn().equals(comparator.getPassengerOn())))) return false;
		if ((this.getPassengerOff() != comparator.getPassengerOff()) && ((this.getPassengerOff() == null) || (! this.getPassengerOff().equals(comparator.getPassengerOff())))) return false;
		if ((this.getIrregularHWAccessed() != comparator.getIrregularHWAccessed()) && ((this.getIrregularHWAccessed() == null) || (! this.getIrregularHWAccessed().equals(comparator.getIrregularHWAccessed())))) return false;
		if ((this.getTripStart() != comparator.getTripStart()) && ((this.getTripStart() == null) || (! this.getTripStart().equals(comparator.getTripStart())))) return false;
		if ((this.getTripEnd() != comparator.getTripEnd()) && ((this.getTripEnd() == null) || (! this.getTripEnd().equals(comparator.getTripEnd())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 5651;

		hash = 167 * hash + (null == this.getAccident() ? 0 : this.getAccident().hashCode());
		hash = 2591 * hash + (null == this.getTheft() ? 0 : this.getTheft().hashCode());
		hash = 193 * hash + (null == this.getDriverLogin() ? 0 : this.getDriverLogin().hashCode());
		hash = 107 * hash + (null == this.getDriverLogout() ? 0 : this.getDriverLogout().hashCode());
		hash = 7523 * hash + (null == this.getDriverAlarmTrigger() ? 0 : this.getDriverAlarmTrigger().hashCode());
		hash = 2777 * hash + (null == this.getPassengerAlarmTrigger() ? 0 : this.getPassengerAlarmTrigger().hashCode());
		hash = 4987 * hash + (null == this.getIrregularDriving() ? 0 : this.getIrregularDriving().hashCode());
		hash = 1459 * hash + (null == this.getPassengerOn() ? 0 : this.getPassengerOn().hashCode());
		hash = 4111 * hash + (null == this.getPassengerOff() ? 0 : this.getPassengerOff().hashCode());
		hash = 2539 * hash + (null == this.getIrregularHWAccessed() ? 0 : this.getIrregularHWAccessed().hashCode());
		hash = 4513 * hash + (null == this.getTripStart() ? 0 : this.getTripStart().hashCode());
		hash = 2789 * hash + (null == this.getTripEnd() ? 0 : this.getTripEnd().hashCode());
		return hash;
	}

}
