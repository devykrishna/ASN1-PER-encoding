/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class Fare extends Object {
	public Fare() {
	}

	private Double amount;

	private Double startFare;

	private Double distanceCharge;

	private Double timeCharge;

	private Double tollways;

	private Double extras;

	private Double tax;

	private Double tips;

	private Double rate;

	private String unit;

	public Double getAmount() {
		
		return this.amount;
	}
	
	public Double getStartFare() {
		
		return this.startFare;
	}
	
	public Double getDistanceCharge() {
		
		return this.distanceCharge;
	}
	
	public Double getTimeCharge() {
		
		return this.timeCharge;
	}
	
	public Double getTollways() {
		
		return this.tollways;
	}
	
	public Double getExtras() {
		
		return this.extras;
	}
	
	public Double getTax() {
		
		return this.tax;
	}
	
	public Double getTips() {
		
		return this.tips;
	}
	
	public Double getRate() {
		
		return this.rate;
	}
	
	public String getUnit() {
		
		return this.unit;
	}
	
	public void setAmount(Double amount) {
		
		this.amount = amount;
	}

	public void setStartFare(Double startFare) {
		
		this.startFare = startFare;
	}

	public void setDistanceCharge(Double distanceCharge) {
		
		this.distanceCharge = distanceCharge;
	}

	public void setTimeCharge(Double timeCharge) {
		
		this.timeCharge = timeCharge;
	}

	public void setTollways(Double tollways) {
		
		this.tollways = tollways;
	}

	public void setExtras(Double extras) {
		
		this.extras = extras;
	}

	public void setTax(Double tax) {
		
		this.tax = tax;
	}

	public void setTips(Double tips) {
		
		this.tips = tips;
	}

	public void setRate(Double rate) {
		
		this.rate = rate;
	}

	public void setUnit(String unit) {
		
		this.unit = unit;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		Fare comparator = (Fare)anObject;

		if ((this.getAmount() != comparator.getAmount()) && ((this.getAmount() == null) || (! this.getAmount().equals(comparator.getAmount())))) return false;
		if ((this.getStartFare() != comparator.getStartFare()) && ((this.getStartFare() == null) || (! this.getStartFare().equals(comparator.getStartFare())))) return false;
		if ((this.getDistanceCharge() != comparator.getDistanceCharge()) && ((this.getDistanceCharge() == null) || (! this.getDistanceCharge().equals(comparator.getDistanceCharge())))) return false;
		if ((this.getTimeCharge() != comparator.getTimeCharge()) && ((this.getTimeCharge() == null) || (! this.getTimeCharge().equals(comparator.getTimeCharge())))) return false;
		if ((this.getTollways() != comparator.getTollways()) && ((this.getTollways() == null) || (! this.getTollways().equals(comparator.getTollways())))) return false;
		if ((this.getExtras() != comparator.getExtras()) && ((this.getExtras() == null) || (! this.getExtras().equals(comparator.getExtras())))) return false;
		if ((this.getTax() != comparator.getTax()) && ((this.getTax() == null) || (! this.getTax().equals(comparator.getTax())))) return false;
		if ((this.getTips() != comparator.getTips()) && ((this.getTips() == null) || (! this.getTips().equals(comparator.getTips())))) return false;
		if ((this.getRate() != comparator.getRate()) && ((this.getRate() == null) || (! this.getRate().equals(comparator.getRate())))) return false;
		if ((this.getUnit() != comparator.getUnit()) && ((this.getUnit() == null) || (! this.getUnit().equals(comparator.getUnit())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 2179;

		hash = 2971 * hash + (null == this.getAmount() ? 0 : this.getAmount().hashCode());
		hash = 7621 * hash + (null == this.getStartFare() ? 0 : this.getStartFare().hashCode());
		hash = 6277 * hash + (null == this.getDistanceCharge() ? 0 : this.getDistanceCharge().hashCode());
		hash = 6329 * hash + (null == this.getTimeCharge() ? 0 : this.getTimeCharge().hashCode());
		hash = 2861 * hash + (null == this.getTollways() ? 0 : this.getTollways().hashCode());
		hash = 5813 * hash + (null == this.getExtras() ? 0 : this.getExtras().hashCode());
		hash = 5557 * hash + (null == this.getTax() ? 0 : this.getTax().hashCode());
		hash = 7247 * hash + (null == this.getTips() ? 0 : this.getTips().hashCode());
		hash = 3889 * hash + (null == this.getRate() ? 0 : this.getRate().hashCode());
		hash = 1489 * hash + (null == this.getUnit() ? 0 : this.getUnit().hashCode());
		return hash;
	}

}
