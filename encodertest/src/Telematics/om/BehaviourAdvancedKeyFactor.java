/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class BehaviourAdvancedKeyFactor extends Object {
	public BehaviourAdvancedKeyFactor() {
	}

	private Double peakValue;

	private Double threshold;

	private Double durationOverThreshold;

	public Double getPeakValue() {
		
		return this.peakValue;
	}
	
	public Double getThreshold() {
		
		return this.threshold;
	}
	
	public Double getDurationOverThreshold() {
		
		return this.durationOverThreshold;
	}
	
	public void setPeakValue(Double peakValue) {
		
		this.peakValue = peakValue;
	}

	public void setThreshold(Double threshold) {
		
		this.threshold = threshold;
	}

	public void setDurationOverThreshold(Double durationOverThreshold) {
		
		this.durationOverThreshold = durationOverThreshold;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		BehaviourAdvancedKeyFactor comparator = (BehaviourAdvancedKeyFactor)anObject;

		if ((this.getPeakValue() != comparator.getPeakValue()) && ((this.getPeakValue() == null) || (! this.getPeakValue().equals(comparator.getPeakValue())))) return false;
		if ((this.getThreshold() != comparator.getThreshold()) && ((this.getThreshold() == null) || (! this.getThreshold().equals(comparator.getThreshold())))) return false;
		if ((this.getDurationOverThreshold() != comparator.getDurationOverThreshold()) && ((this.getDurationOverThreshold() == null) || (! this.getDurationOverThreshold().equals(comparator.getDurationOverThreshold())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 6133;

		hash = 2399 * hash + (null == this.getPeakValue() ? 0 : this.getPeakValue().hashCode());
		hash = 2399 * hash + (null == this.getThreshold() ? 0 : this.getThreshold().hashCode());
		hash = 1931 * hash + (null == this.getDurationOverThreshold() ? 0 : this.getDurationOverThreshold().hashCode());
		return hash;
	}

}
