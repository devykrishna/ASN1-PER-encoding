/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class IrregularHWAccessed extends Object {
	public IrregularHWAccessed() {
	}

	private String deviceId;

	private Position position;

	private String reason;

	public String getDeviceId() {
		
		return this.deviceId;
	}
	
	public Position getPosition() {
		
		return this.position;
	}
	
	public String getReason() {
		
		return this.reason;
	}
	
	public void setDeviceId(String deviceId) {
		
		this.deviceId = deviceId;
	}

	public void setPosition(Position position) {
		
		this.position = position;
	}

	public void setReason(String reason) {
		
		this.reason = reason;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		IrregularHWAccessed comparator = (IrregularHWAccessed)anObject;

		if ((this.getDeviceId() != comparator.getDeviceId()) && ((this.getDeviceId() == null) || (! this.getDeviceId().equals(comparator.getDeviceId())))) return false;
		if ((this.getPosition() != comparator.getPosition()) && ((this.getPosition() == null) || (! this.getPosition().equals(comparator.getPosition())))) return false;
		if ((this.getReason() != comparator.getReason()) && ((this.getReason() == null) || (! this.getReason().equals(comparator.getReason())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 5179;

		hash = 103 * hash + (null == this.getDeviceId() ? 0 : this.getDeviceId().hashCode());
		hash = 677 * hash + (null == this.getPosition() ? 0 : this.getPosition().hashCode());
		hash = 2521 * hash + (null == this.getReason() ? 0 : this.getReason().hashCode());
		return hash;
	}

}
