/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class HarshOvertaking extends Object {
	public HarshOvertaking() {
	}

	private Double distancefromOvertookVehicle;

	private Double acceleratingDuration;

	private Double dfbSpeed;

	private List<PositionNSpeed> points;

	public Double getDistancefromOvertookVehicle() {
		
		return this.distancefromOvertookVehicle;
	}
	
	public Double getAcceleratingDuration() {
		
		return this.acceleratingDuration;
	}
	
	public Double getDfbSpeed() {
		
		return this.dfbSpeed;
	}
	
	public List<PositionNSpeed> getPoints() {
		
		return this.points;
	}
	
	public void setDistancefromOvertookVehicle(Double distancefromOvertookVehicle) {
		
		this.distancefromOvertookVehicle = distancefromOvertookVehicle;
	}

	public void setAcceleratingDuration(Double acceleratingDuration) {
		
		this.acceleratingDuration = acceleratingDuration;
	}

	public void setDfbSpeed(Double dfbSpeed) {
		
		this.dfbSpeed = dfbSpeed;
	}

	public void setPoints(List<PositionNSpeed> points) {
		
		this.points = points;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		HarshOvertaking comparator = (HarshOvertaking)anObject;

		if ((this.getDistancefromOvertookVehicle() != comparator.getDistancefromOvertookVehicle()) && ((this.getDistancefromOvertookVehicle() == null) || (! this.getDistancefromOvertookVehicle().equals(comparator.getDistancefromOvertookVehicle())))) return false;
		if ((this.getAcceleratingDuration() != comparator.getAcceleratingDuration()) && ((this.getAcceleratingDuration() == null) || (! this.getAcceleratingDuration().equals(comparator.getAcceleratingDuration())))) return false;
		if ((this.getDfbSpeed() != comparator.getDfbSpeed()) && ((this.getDfbSpeed() == null) || (! this.getDfbSpeed().equals(comparator.getDfbSpeed())))) return false;
		if ((this.getPoints() != comparator.getPoints()) && ((this.getPoints() == null) || (! this.getPoints().equals(comparator.getPoints())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 131;

		hash = 6679 * hash + (null == this.getDistancefromOvertookVehicle() ? 0 : this.getDistancefromOvertookVehicle().hashCode());
		hash = 389 * hash + (null == this.getAcceleratingDuration() ? 0 : this.getAcceleratingDuration().hashCode());
		hash = 2689 * hash + (null == this.getDfbSpeed() ? 0 : this.getDfbSpeed().hashCode());
		hash = 5651 * hash + (null == this.getPoints() ? 0 : this.getPoints().hashCode());
		return hash;
	}

}
