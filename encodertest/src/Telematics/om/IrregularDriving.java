/*  
 *   This file was generated by openASN.1 - an open source ASN.1 toolkit for java
 *
 *   openASN.1 is Copyright (C) 2007 Clayton Hoss, Marc Weyland
 *
 *   openASN.1 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as 
 *   published by the Free Software Foundation, either version 3 of 
 *   the License, or (at your option) any later version.
 *
 *   openASN.1 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with openASN.1. If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package Telematics.om;

import java.util.List;

public class IrregularDriving extends Object {
	public IrregularDriving() {
	}

	private Position position;

	private String driverId;

	private String driverName;

	private Double speed;

	private Double odometer;

	private Long statusCode;

	public Position getPosition() {
		
		return this.position;
	}
	
	public String getDriverId() {
		
		return this.driverId;
	}
	
	public String getDriverName() {
		
		return this.driverName;
	}
	
	public Double getSpeed() {
		
		return this.speed;
	}
	
	public Double getOdometer() {
		
		return this.odometer;
	}
	
	public Long getStatusCode() {
		
		return this.statusCode;
	}
	
	public void setPosition(Position position) {
		
		this.position = position;
	}

	public void setDriverId(String driverId) {
		
		this.driverId = driverId;
	}

	public void setDriverName(String driverName) {
		
		this.driverName = driverName;
	}

	public void setSpeed(Double speed) {
		
		this.speed = speed;
	}

	public void setOdometer(Double odometer) {
		
		this.odometer = odometer;
	}

	public void setStatusCode(Long statusCode) {
		
		this.statusCode = statusCode;
	}

	@Override
	public boolean equals(Object anObject) {
		if (this == anObject) return true;
		if ((anObject == null) || (anObject.getClass() != this.getClass())) return false;

		IrregularDriving comparator = (IrregularDriving)anObject;

		if ((this.getPosition() != comparator.getPosition()) && ((this.getPosition() == null) || (! this.getPosition().equals(comparator.getPosition())))) return false;
		if ((this.getDriverId() != comparator.getDriverId()) && ((this.getDriverId() == null) || (! this.getDriverId().equals(comparator.getDriverId())))) return false;
		if ((this.getDriverName() != comparator.getDriverName()) && ((this.getDriverName() == null) || (! this.getDriverName().equals(comparator.getDriverName())))) return false;
		if ((this.getSpeed() != comparator.getSpeed()) && ((this.getSpeed() == null) || (! this.getSpeed().equals(comparator.getSpeed())))) return false;
		if ((this.getOdometer() != comparator.getOdometer()) && ((this.getOdometer() == null) || (! this.getOdometer().equals(comparator.getOdometer())))) return false;
		if ((this.getStatusCode() != comparator.getStatusCode()) && ((this.getStatusCode() == null) || (! this.getStatusCode().equals(comparator.getStatusCode())))) return false;
		return true;
	}

	@Override
	public int hashCode() {
		int hash = 4111;

		hash = 331 * hash + (null == this.getPosition() ? 0 : this.getPosition().hashCode());
		hash = 2083 * hash + (null == this.getDriverId() ? 0 : this.getDriverId().hashCode());
		hash = 7109 * hash + (null == this.getDriverName() ? 0 : this.getDriverName().hashCode());
		hash = 1627 * hash + (null == this.getSpeed() ? 0 : this.getSpeed().hashCode());
		hash = 6829 * hash + (null == this.getOdometer() ? 0 : this.getOdometer().hashCode());
		hash = 5261 * hash + (null == this.getStatusCode() ? 0 : this.getStatusCode().hashCode());
		return hash;
	}

}
